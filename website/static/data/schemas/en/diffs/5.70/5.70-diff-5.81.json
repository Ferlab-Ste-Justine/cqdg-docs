{"schemas":{"sample_registration":{"updated":{"sample_type":{"meta":{"notes":{"left":null,"right":"Codes are taken from NCI Thesaurus (NCIt) at http://purl.obolibrary.org/obo/ncit.owl DNA (NCIT:C449), Ribonucleic Acid (NCIT:C812)"}},"restrictions":{"codeList":{"left":["DNA","RNA"],"right":["NCIT:C449","NCIT:C812"],"data":{"added":["NCIT:C449","NCIT:C812"],"deleted":["DNA","RNA"]}}}}},"created":{},"deleted":{}},"study":{"updated":{"access_limitations":{"restrictions":{"script":{"left":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const list = [\n            \"DUO:0000004\",\n            \"DUO:0000006\",\n            \"DUO:0000007\",\n            \"DUO:0000011\",\n            \"DUO:0000042\",\n          ];\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = $field.trim().replace(/\\s/g, '');\n        const currValues = currField.split(';');\n        let valid = true;\n        currValues.forEach((value) => {\n            if (value && !list.includes(value)) {\n                valid = false;\n            }\n        })\n\n        if (!valid) {\n            result = {\n                valid: false,\n                message: `${$name} must contain a list of these codes: ${list.join(';')} separated by semicolon (;)`\n            }\n        }\n\n        return result;\n    })"],"right":null}}},"access_requirements":{"meta":{"notes":{"left":"Refer to the Data Use Ontology https://github.com/EBISPOT/DUO","right":"Refer to the Data Use Ontology for the full description https://github.com/EBISPOT/DUO"}},"restrictions":{"script":{"left":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const list = [\n            \"DUO:0000017\",\n            \"DUO:0000018\",\n            \"DUO:0000019\",\n            \"DUO:0000020\",\n            \"DUO:0000021\",\n            \"DUO:0000022\",\n            \"DUO:0000025\",\n            \"DUO:0000026\",\n            \"DUO:0000027\",\n            \"DUO:0000028\",\n            \"DUO:0000029\",\n            \"DUO:0000043\",\n            \"DUO:0000044\",\n            \"DUO:0000045\",\n            \"DUO:0000046\"\n          ];\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = $field.trim().replace(/\\s/g, '');\n        const currValues = currField.split(';');\n        let valid = true;\n        currValues.forEach((value) => {\n            if (value && !list.includes(value)) {\n                valid = false;\n            }\n        })\n\n        if (!valid) {\n            result = {\n                valid: false,\n                message: `${$name} must contain a list of these codes: ${list.join(';')} separated by semicolon (;)`\n            }\n        }\n\n        return result;\n    })"],"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const list = [\n            \"DUO:0000012\",\n            \"DUO:0000015\",\n            \"DUO:0000016\",\n            \"DUO:0000018\",\n            \"DUO:0000019\",\n            \"DUO:0000020\",\n            \"DUO:0000021\",\n            \"DUO:0000022\",\n            \"DUO:0000025\",\n            \"DUO:0000026\",\n            \"DUO:0000027\",\n            \"DUO:0000028\",\n            \"DUO:0000029\",\n            \"DUO:0000043\",\n            \"DUO:0000044\",\n            \"DUO:0000045\",\n            \"DUO:0000046\",\n            \"Biospecimen Access\"\n          ];\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = $field.trim().replace(/\\s/g, '');\n        const currValues = currField.split(';');\n        let valid = true;\n        currValues.forEach((value) => {\n            if (value && !list.includes(value)) {\n                valid = false;\n            }\n        })\n\n        if (!valid) {\n            result = {\n                valid: false,\n                message: `${$name} must contain a list of these codes: ${list.join(';')} separated by semicolon (;)`\n            }\n        }\n\n        return result;\n    })"]},"codeList":{"left":["DUO:0000017","DUO:0000018","DUO:0000019","DUO:0000020","DUO:0000021","DUO:0000022","DUO:0000025","DUO:0000026","DUO:0000027","DUO:0000028","DUO:0000029","DUO:0000043","DUO:0000044","DUO:0000045","DUO:0000046"],"right":["DUO:0000012","DUO:0000015","DUO:0000016","DUO:0000018","DUO:0000019","DUO:0000020","DUO:0000021","DUO:0000022","DUO:0000025","DUO:0000026","DUO:0000027","DUO:0000028","DUO:0000029","DUO:0000043","DUO:0000044","DUO:0000045","DUO:0000046","Biospecimen Access"],"data":{"added":["DUO:0000012","DUO:0000015","DUO:0000016","Biospecimen Access"],"deleted":["DUO:0000017"]}}}}},"created":{"data_source":{"changeType":"created","name":"data_source","valueType":"string","description":"Describes the main source of the data collected from study participants","restrictions":{"required":true},"meta":{"core":true,"displayName":"Data source"}},"selection_criteria":{"changeType":"created","name":"selection_criteria","valueType":"string","description":"Inclusion and exclusion criteria for the study","restrictions":{"required":true},"meta":{"core":true,"displayName":"Selection criteria"}},"publication":{"changeType":"created","name":"publication","valueType":"string","description":"Digital Object Identifier of the journal article that describes the study's methodology and rational ","restrictions":{"required":true},"meta":{"core":true,"notes":"Provide a DOI URL formatted as https://doi.org/ followed by the DOI number.","displayName":"Publication"}}},"deleted":{"biospecimen_access":{"changeType":"deleted","name":"biospecimen_access","valueType":"boolean","description":"Biospecimen may be accessed (consent type)","restrictions":{"required":true},"meta":{"validationDependency":true,"core":true,"displayName":"Biospecimen access"}}}},"participant":{"updated":{"age_at_recruitment":{"restrictions":{"required":{"left":true,"right":false}}}},"created":{"gender":{"changeType":"created","description":"Gender of the participant","name":"gender","valueType":"string","restrictions":{"required":true,"codeList":["Male","Female","Other","Unknown"]},"meta":{"core":true,"notes":"Data from administrative health records or self-reported","displayName":"Gender"}}},"deleted":{"sex":{"changeType":"deleted","description":"Sex of the participant","name":"sex","valueType":"string","restrictions":{"required":true,"codeList":["Male","Female","Other","Unknown"]},"meta":{"core":true,"notes":"Data from administrative health records or self-reported","displayName":"Sex"}}}},"biospecimen":{"updated":{"biospecimen_tissue_source":{"meta":{"notes":{"left":"Terms are taken from NCI Thesaurus (NCIt) at http://purl.obolibrary.org/obo/ncit.owl","right":"Codes are taken from NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl Blood (NCIT:C12434), Saliva (NCIT:C13275), Solid Tissue Sample (NCIT:C164014), Bone Marrow (NCIT:C12431), Umbilical Cord (NCIT:C34320), Umbilical Cord Blood (NCIT:C34320)"}},"restrictions":{"codeList":{"left":["Blood","Bone marrow","Saliva","Solid tissue"],"right":["NCIT:C12434","NCIT:C13275","NCIT:C164014","NCIT:C12431","NCIT:C13300","NCIT:C34320","Unknown"],"data":{"added":["NCIT:C12434","NCIT:C13275","NCIT:C164014","NCIT:C12431","NCIT:C13300","NCIT:C34320","Unknown"],"deleted":["Blood","Bone marrow","Saliva","Solid tissue"]}}}},"cancer_biospecimen_type":{"meta":{"notes":{"left":null,"right":"Codes are taken from NCI Thesaurus (NCIt) at http://purl.obolibrary.org/obo/ncit.owl Derived Cell Line (NCIT:C156445), Metastatic Tumor Sample (NCIT:156440), Sample Derived from New Primary (NCIT:156441), Tumor-Adjacent Normal Specimen (NCIT:164032), Tumor Tissue (NCIT:C18009), Normal Tissue Segment (NCIT:C162623), Cell Line-Derived Xenograft (NCIT:C156443)"}},"restrictions":{"codeList":{"left":["Derived Cell Line","Metastatic Tumor Sample","Sample Derived from New Primary","Tumor-Adjacent Normal Specimen","Tumor Tissue","Normal Tissue Segment","Cell Line-Derived Xenograft"],"right":["NCIT:C156445","NCIT:156440","NCIT:156441","NCIT:164032","NCIT:C18009","NCIT:C162623","NCIT:C156443"],"data":{"added":["NCIT:C156445","NCIT:156440","NCIT:156441","NCIT:164032","NCIT:C18009","NCIT:C162623","NCIT:C156443"],"deleted":["Derived Cell Line","Metastatic Tumor Sample","Sample Derived from New Primary","Tumor-Adjacent Normal Specimen","Tumor Tissue","Normal Tissue Segment","Cell Line-Derived Xenograft"]}}}}},"created":{},"deleted":{}},"dataset":{"updated":{},"created":{"study_id":{"changeType":"created","name":"study_id","valueType":"string","description":"Identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID","notes":"Alphanumeric characters along with dot, hyphens and underscores are supported.  Maximum of 250 characters."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},"dataset_name":{"changeType":"created","name":"dataset_name","valueType":"string","description":"Full name of the Dataset","restrictions":{"required":true},"meta":{"core":true,"displayName":"Full name of the Dataset"}},"dataset_description":{"changeType":"created","name":"dataset_description","valueType":"string","description":"Brief description of the Dataset ","restrictions":{"required":true},"meta":{"core":true,"notes":"Provide information on the goal, experimental strategy and selection criteria for this dataset","displayName":"Brief description of the Dataset "}}},"deleted":{}}}}
