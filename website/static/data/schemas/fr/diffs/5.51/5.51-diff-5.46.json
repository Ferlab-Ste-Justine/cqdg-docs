{"schemas":{"donor":{"updated":{"age_of_death":{"valueType":{"left":"number","right":"integer"},"meta":{"units":{"left":"years","right":"days"}}}},"created":{},"deleted":{}},"biospecimen":{"updated":{"biospecimen_type":{"restrictions":{"codeList":{"left":["Cell line - derived from normal","Cell line - derived from tumor","Cell line - derived from xenograft tumor","Metastatic tumor - additional metastatic","Metastatic tumor - metastasis local to lymph node","Metastatic tumor - metastasis to distant location","Metastatic tumor","Normal - tissue adjacent to primary tumor","Normal","Primary tumor - additional new primary","Primary tumor - adjacent to normal","Primary tumor","Recurrent tumor","Xenograft - derived from primary tumor","Xenograft - derived from tumor cell line","Derived from allogenic bone marrow transplant","Derived from autologous bone marrow transplant"],"right":["Cell line - derived from normal","Cell line - derived from tumour","Cell line - derived from xenograft tumour","Metastatic tumour - additional metastatic","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour","Normal - tissue adjacent to primary tumour","Normal","Primary tumour - additional new primary","Primary tumour - adjacent to normal","Primary tumour","Recurrent tumour","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line","Derived from allogenic bone marrow transplant","Derived from autologous bone marrow transplant"],"data":{"added":["Cell line - derived from tumour","Cell line - derived from xenograft tumour","Metastatic tumour - additional metastatic","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour","Normal - tissue adjacent to primary tumour","Primary tumour - additional new primary","Primary tumour - adjacent to normal","Primary tumour","Recurrent tumour","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line"],"deleted":["Cell line - derived from tumor","Cell line - derived from xenograft tumor","Metastatic tumor - additional metastatic","Metastatic tumor - metastasis local to lymph node","Metastatic tumor - metastasis to distant location","Metastatic tumor","Normal - tissue adjacent to primary tumor","Primary tumor - additional new primary","Primary tumor - adjacent to normal","Primary tumor","Recurrent tumor","Xenograft - derived from primary tumor","Xenograft - derived from tumor cell line"]}}}}},"created":{"tumour_normal_designation":{"changeType":"created","name":"tumour_normal_designation","valueType":"string","description":"Le spécimen biologique provient de tissu tumoural ou normal","restrictions":{"required":true,"codeList":["Normal","Tumour","Not applicable"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tissu normal ou tumoural","notes":"Indicate `Not applicable' if the biospecimen was not analysed."}},"tumour_histological_type":{"changeType":"created","name":"tumour_histological_type","description":"Code histologique (morphologie) du néoplasme selon la classification ICD-O-3 (International Classification of Diseases for Oncology, 3rd Edition) déclaré dans le rapport de pathologie","valueType":"string","meta":{"validationDependency":true,"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"Si le spécimen biologique est une tumeur. Veuillez vous référer au manuel ICD-O-3 à l'adresse suivante https://apps.who.int/iris/handle/10665/42344","valueType":"string","examples":"8260/3,9691/36","displayName":"Type histologique de la tumeur"},"restrictions":{"regex":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$","script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumourNormalDesignation = $row.tumour_normal_designation || '';\n\n        if (!currField && tumourNormalDesignation && tumourNormalDesignation.trim().toLowerCase() === 'tumour') {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumour_normal_designation is Tumour.`,\n            };\n        }\n\n        return result;\n    })"]}}},"deleted":{"tumor_normal_designation":{"changeType":"deleted","name":"tumor_normal_designation","valueType":"string","description":"Le spécimen biologique provient de tissu tumoral ou normal","restrictions":{"required":true,"codeList":["Normal","Tumor","Not applicable"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tissu normal ou tumoral","notes":"Indicate `Not applicable' if the biospecimen was not analysed."}},"tumor_histological_type":{"changeType":"deleted","name":"tumor_histological_type","description":"Code histologique (morphologie) du néoplasme selon la classification ICD-O-3 (International Classification of Diseases for Oncology, 3rd Edition) déclaré dans le rapport de pathologie","valueType":"string","meta":{"validationDependency":true,"core":true,"dependsOn":"sample_registration.tumor_normal_designation","notes":"Si le spécimen biologique est une tumeur. Veuillez vous référer au manuel ICD-O-3 à l'adresse suivante https://apps.who.int/iris/handle/10665/42344","valueType":"string","examples":"8260/3,9691/36","displayName":"Type histologique de la tumeur"},"restrictions":{"regex":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$","script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumourNormalDesignation = $row.tumour_normal_designation || '';\n\n        if (!currField && tumourNormalDesignation && tumourNormalDesignation.trim().toLowerCase() === 'tumour') {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumour_normal_designation is Tumour.`,\n            };\n        }\n\n        return result;\n    })"]}}}},"Diagnosis":{"updated":{"diagnosis_ICD_code":{"restrictions":{"regex":{"left":"^[A-TV-Z][0-9][0-9AB].?[0-9A-TV-Z]{0,4}$","right":"^((C)7(A|B)|[A-Z][0-9]{2})(.[0-9]{1,3}[A-Za-z]{0,1})?$"}}},"diagnosis_mondo_code":{"restrictions":{"regex":{"left":"^(MONDO_|HP_)[0-9]{7}$","right":"^(MONDO_)[0-9]{7}$"}}},"age_at_diagnosis":{"valueType":{"left":"number","right":"integer"},"restrictions":{"range":{"left":{"min":0,"max":100},"right":null},"script":{"left":null,"right":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return {valid: false, message: `Column ${$name} is missing.`};\n        }\n\n        let result = {valid: true, message: 'Ok'};\n        try {\n            const currField = parseFloat($field);\n            if (currField >= 101) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be between 0 and 100, optionally with decimal.`,\n                };\n            }\n        } catch (err) {\n            result = {\n                valid: false,\n                message: `The value '${field}' of the field ${$name} could not be converted to a decimal number. (parseFloat failed)`,\n            };\n        }\n\n        return result;\n    })"]}}},"stage_group":{"meta":{"dependsOn":{"left":"diagnosis.tumor_staging_system","right":"diagnosis.tumour_staging_system"}}},"t_category":{"meta":{"dependsOn":{"left":"diagnosis.tumor_staging_system","right":"diagnosis.tumour_staging_system"}}},"n_category":{"meta":{"dependsOn":{"left":"diagnosis.tumor_staging_system","right":"diagnosis.tumour_staging_system"}}},"m_category":{"meta":{"dependsOn":{"left":"diagnosis.tumor_staging_system","right":"diagnosis.tumour_staging_system"}}}},"created":{"tumour_staging_system":{"changeType":"created","name":"tumour_staging_system","valueType":"string","description":"Indiquer le système de stadification du cancer utilisé pour effectué le diagnostic primaire","restrictions":{"codeList":["AJCC 8th edition","AJCC 7th edition","Ann Arbor staging system","Binet staging system","Durie-Salmon staging system","FIGO staging system","Lugano staging system","Rai staging system","Revised International staging system (RISS)","St Jude staging system"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if (!currField && isCancer) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the diagnosis' is_cancer flag is 1/true.`,\n            };\n        }\n        return result;\n    })"]},"meta":{"dependsOn":"diagnosis.is_cancer","core":true,"displayName":"Système de stadification"}}},"deleted":{"tumor_staging_system":{"changeType":"deleted","name":"tumor_staging_system","valueType":"string","description":"Indiquer le système de stadification du cancer utilisé pour effectué le diagnostic primaire","restrictions":{"codeList":["AJCC 8th edition","AJCC 7th edition","Ann Arbor staging system","Binet staging system","Durie-Salmon staging system","FIGO staging system","Lugano staging system","Rai staging system","Revised International staging system (RISS)","St Jude staging system"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if (!currField && isCancer) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the diagnosis' is_cancer flag is 1/true.`,\n            };\n        }\n        return result;\n    })"]},"meta":{"dependsOn":"diagnosis.is_cancer","core":true,"displayName":"Système de stadification"}}}},"phenotype":{"updated":{"age_at_phenotype":{"valueType":{"left":"number","right":"integer"},"meta":{"units":{"left":"years","right":"days"}}}},"created":{},"deleted":{}}}}
