{"schemas":{"sample_registration":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude.","right":"Identifant pour l'étude."}},"submitter_donor_id":{"description":{"left":"Identifiant unique pour le donneur, soumis par l'étude.","right":"Identifiant pour le donneur, soumis par l'étude."}},"submitter_biospecimen_id":{"description":{"left":"Identifiant unique pour le spécimen biologique soumis par l'étude.","right":"Identifiant pour le spécimen biologique soumis par l'étude."}},"sample_type":{"restrictions":{"codeList":{"left":["Amplified DNA","ctDNA","Other DNA enrichments","Other RNA fractions","polyA+ RNA","Ribo-Zero RNA","Total DNA","Total RNA","Other"],"right":["Amplified DNA","ctDNA","Other DNA enrichments","Other RNA fractions","polyA+ RNA","Ribo-Zero RNA","Total DNA","Total RNA","ChIP DNA","Purified PCR Products","Frozen cell suspension","Fresh/Frozen Cell Pellet","Other"],"data":{"added":["ChIP DNA","Purified PCR Products","Frozen cell suspension","Fresh/Frozen Cell Pellet"],"deleted":[]}}}}},"created":{},"deleted":{}},"study":{"updated":{"domain":{"restrictions":{"codeList":{"left":["Cancer","Rare disease","Neurodevelopmental conditions","General health","Not applicable"],"right":["Cancer","Rare disease","Neurodevelopmental conditions","Congenital malformations and deformations","General health","Not applicable"],"data":{"added":["Congenital malformations and deformations"],"deleted":[]}}}}},"created":{"access_limitations":{"changeType":"created","name":"access_limitations","description":"Restrictions pour l'accès telles que définies dans l'ontologie DUO de GA4GH","valueType":"string","restrictions":{"required":true,"codeList":["DUO:0000004","DUO:0000005","DUO:0000006","DUO:0000007","DUO:0000011","DUO:0000012","DUO:0000014","DUO:0000015","DUO:0000016","DUO:0000042"]},"meta":{"core":true,"displayName":"Restrictions pour l'accès","notes":"Référez-vous au code du Data Use Ontology https://github.com/EBISPOT/DUO"}},"access_requirements":{"changeType":"created","name":"access_requirements","description":"Conditions d'utilisation telles que définies dans l'ontologie DUO de GA4GH","valueType":"string","restrictions":{"required":true,"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const list = [\n            \"DUO:0000017\",\n            \"DUO:0000018\",\n            \"DUO:0000019\",\n            \"DUO:0000020\",\n            \"DUO:0000021\",\n            \"DUO:0000022\",\n            \"DUO:0000025\",\n            \"DUO:0000026\",\n            \"DUO:0000027\",\n            \"DUO:0000028\",\n            \"DUO:0000029\"\n          ];\n        \n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = $field.trim().replace(/\\s/g, '');\n        const currValues = currField.split(';');\n        let valid = true;\n        currValues.forEach((value) => {\n            if (value && !list.includes(value)) {\n                valid = false;\n            }\n        })\n\n        if (!valid) {\n            result = {\n                valid: false, \n                message: `${$name} must contain a list of these codes: ${list.join(';')} separated by semicolon (;)`\n            }\n        }\n        \n        return result;\n    })"]},"meta":{"core":true,"displayName":"Conditions d'utilisation","notes":"Référez-vous au code du Data Use Ontology https://github.com/EBISPOT/DUO","examples":"DUO:0000021;DUO:0000025"}}},"deleted":{"short_name":{"changeType":"deleted","name":"short_name","valueType":"string","description":"Accronyme ou nom abrégé de l'étude","meta":{"core":true,"displayName":"Accronyme ou nom abrégé de l'étude"}}}},"data access":{"updated":{},"created":{},"deleted":{"entity_type":{"changeType":"deleted","name":"entity_type","valueType":"string","description":"Type d'entité auquel s'appliquent les restrictions d'accès et conditions d'utilisation","meta":{"core":true,"displayName":"Type d'entité"},"restrictions":{"required":true,"codeList":["Study","Donnor ","Biospecimen","File"]}},"entity_id":{"changeType":"deleted","name":"entity_id","valueType":"string","description":"Identifiant unique pour l'entité","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID de l'entité","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},"access_limitations":{"changeType":"deleted","name":"access_limitations","description":"Restrictions pour l'accès telles que définies dans l'ontologie DUO de GA4GH","valueType":"string","restrictions":{"required":true,"codeList":["DUO:0000004","DUO:0000005","DUO:0000006","DUO:0000007","DUO:0000011","DUO:0000012","DUO:0000014","DUO:0000015","DUO:0000016","DUO:0000042"]},"meta":{"core":true,"displayName":"Restrictions pour l'accès","notes":"Référez-vous au code du Data Use Ontology https://github.com/EBISPOT/DUO"}},"access_requirements":{"changeType":"deleted","name":"access_requirements","description":"Conditions d'utilisation telles que définies dans l'ontologie DUO de GA4GH","valueType":"string","restrictions":{"required":true,"codeList":["DUO:0000017","DUO:0000018","DUO:0000019","DUO:0000020","DUO:0000021","DUO:0000022","DUO:0000025","DUO:0000026","DUO:0000027","DUO:0000028","DUO:0000029"]},"meta":{"core":true,"displayName":"Conditions d'utilisation","notes":"Référez-vous au code du Data Use Ontology https://github.com/EBISPOT/DUO","examples":"DUO:0000021, DUO:0000025"}}}},"donor":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}},"gender":{"restrictions":{"required":{"left":null,"right":true}}},"age_of_death":{"valueType":{"left":"integer","right":"number"},"meta":{"units":{"left":"days","right":"years"}}}},"created":{},"deleted":{}},"biospecimen":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}},"submitter_donor_id":{"description":{"left":"Identifiant unique pour le donneur, soumis par l'étude","right":"Identifiant pour le donneur, soumis par l'étude"}},"date_biospecimen_collection":{"meta":{"core":{"left":true,"right":null}},"restrictions":{"required":{"left":true,"right":null}}},"biospecimen_tissue_source":{"restrictions":{"codeList":{"left":["Blood derived - bone marrow","Blood derived - peripheral blood","Blood derived","Bone marrow","Bone","Buccal cell","Buffy coat","Cerebellum","Cerebrospinal fluid"],"right":["Amniotic fluid","Anorectal","Blood derived - bone marrow","Blood derived - peripheral blood","Blood derived","Bone marrow","Bone","Bronchial specimen","Bronchoalveolar lavage","Buccal cell","Buffy coat","Cerebellum","Cerebrospinal fluid","Cervix","Cord blood","Cornea or Conjunctiva","Dialysis fluid","Endometrium","Esophagus","Fibroblast","Intestine","Liver","Lower respiratory specimen","Lymph node","Mononuclear cells from bone marrow","Nasopharynx","Oropharyngeal wash","Other","Pericardial fluid","Peritoneal fluid","Plasma","Pleural effusion","Red Blood Cells","Saliva","Specimen","Serum","Skin","Solid tissue","Spleen","Pus","Sputum","Stem cell product","Stomach","Stool","Sweat","Synovial fluid","Throat","Tonsil","Umbilical cord structure","Upper respiratory specimen","Urethra","Urine","Vaginal fluid","Vitreous fluid"],"data":{"added":["Amniotic fluid","Anorectal","Bronchial specimen","Bronchoalveolar lavage","Cervix","Cord blood","Cornea or Conjunctiva","Dialysis fluid","Endometrium","Esophagus","Fibroblast","Intestine","Liver","Lower respiratory specimen","Lymph node","Mononuclear cells from bone marrow","Nasopharynx","Oropharyngeal wash","Other","Pericardial fluid","Peritoneal fluid","Plasma","Pleural effusion","Red Blood Cells","Saliva","Specimen","Serum","Skin","Solid tissue","Spleen","Pus","Sputum","Stem cell product","Stomach","Stool","Sweat","Synovial fluid","Throat","Tonsil","Umbilical cord structure","Upper respiratory specimen","Urethra","Urine","Vaginal fluid","Vitreous fluid"],"deleted":[]}}}},"biospecimen_type":{"restrictions":{"codeList":{"left":["Cell line - derived from normal","Cell line - derived from tumour","Cell line - derived from xenograft tumour","Metastatic tumour - additional metastatic","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour","Normal - tissue adjacent to primary tumour","Normal","Primary tumour - additional new primary","Primary tumour - adjacent to normal","Primary tumour","Recurrent tumour","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line","Derived from allogenic bone marrow transplant","Derived from autologous bone marrow transplant"],"right":["Cell line - derived from normal","Cell line - derived from tumor","Cell line - derived from xenograft tumor","Metastatic tumor - additional metastatic","Metastatic tumor - metastasis local to lymph node","Metastatic tumor - metastasis to distant location","Metastatic tumor","Normal - tissue adjacent to primary tumor","Normal","Peritumoral","Primary tumor - additional new primary","Primary tumor - adjacent to normal","Primary tumor","Recurrent tumor","Xenograft - derived from primary tumor","Xenograft - derived from tumor cell line","Derived from allogenic bone marrow transplant","Derived from autologous bone marrow transplant"],"data":{"added":["Cell line - derived from tumor","Cell line - derived from xenograft tumor","Metastatic tumor - additional metastatic","Metastatic tumor - metastasis local to lymph node","Metastatic tumor - metastasis to distant location","Metastatic tumor","Normal - tissue adjacent to primary tumor","Peritumoral","Primary tumor - additional new primary","Primary tumor - adjacent to normal","Primary tumor","Recurrent tumor","Xenograft - derived from primary tumor","Xenograft - derived from tumor cell line"],"deleted":["Cell line - derived from tumour","Cell line - derived from xenograft tumour","Metastatic tumour - additional metastatic","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour","Normal - tissue adjacent to primary tumour","Primary tumour - additional new primary","Primary tumour - adjacent to normal","Primary tumour","Recurrent tumour","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line"]}}}}},"created":{"tumor_normal_designation":{"changeType":"created","name":"tumor_normal_designation","valueType":"string","description":"Le spécimen biologique provient de tissu tumoral ou normal","restrictions":{"required":true,"codeList":["Normal","Tumor","Not applicable"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tissu normal ou tumoral","notes":"Indicate `Not applicable' if the biospecimen was not analysed."}},"biospecimen_anatomic_location_source_text":{"changeType":"created","name":"biospecimen_anatomic_location_source_text","valueType":"string","description":"Site anatomique d'où le spécimen biologique a été collecté","restrictions":{"required":true},"meta":{"validationDependency":true,"core":true,"notes":"Utiliser le terme inscrit au moment de la collecte du biospécimen","displayName":"Localisation anatomique du spécimen biologique (terme)","examples":"Esophagus"}},"biospecimen_anatomic_location_SNOMED_code":{"changeType":"created","name":"biospecimen_anatomic_location_SNOMED_code","valueType":"string","description":"Indiquer the SNOMED CT notation (code) for the anatomic location of the biospecimen","restrictions":{"required":true,"regex":"^[0-9]*$"},"meta":{"validationDependency":true,"core":true,"notes":"Veuillez vous référer au code (notation) dans SNOMED CT https://www.snomed.org/snomed-ct/Use-SNOMED-CT","displayName":"Localisation anatomique du spécimen biologique (code)","examples":"32849002"}},"tumor_histological_type":{"changeType":"created","name":"tumor_histological_type","description":"Code histologique (morphologie) du néoplasme selon la classification ICD-O-3 (International Classification of Diseases for Oncology, 3rd Edition) déclaré dans le rapport de pathologie","valueType":"string","meta":{"validationDependency":true,"core":true,"dependsOn":"sample_registration.tumor_normal_designation","notes":"Si le spécimen biologique est une tumeur. Veuillez vous référer au manuel ICD-O-3 à l'adresse suivante https://apps.who.int/iris/handle/10665/42344","valueType":"string","examples":"8260/3,9691/36","displayName":"Type histologique de la tumeur"},"restrictions":{"regex":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$","script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumourNormalDesignation = $row.tumour_normal_designation || '';\n\n        if (!currField && tumourNormalDesignation && tumourNormalDesignation.trim().toLowerCase() === 'tumour') {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumour_normal_designation is Tumour.`,\n            };\n        }\n\n        return result;\n    })"]}}},"deleted":{"tumour_normal_designation":{"changeType":"deleted","name":"tumour_normal_designation","valueType":"string","description":"Le spécimen biologique provient de tissu tumoural ou normal","restrictions":{"required":true,"codeList":["Normal","Tumour"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tissu normal ou tumoural"}},"biospecimen_anatomic_location":{"changeType":"deleted","name":"biospecimen_anatomic_location","valueType":"string","description":"Site anatomique d'où le spécimen biologique a éte collecté selon la classification topographique ICD-O-3","restrictions":{"required":true,"regex":"^[C][0-9]{2}(.[0-9]{1})?$"},"meta":{"validationDependency":true,"core":true,"notes":"Veuillez vous référer aux lignes directrices du manuel ICD-O-3 à l'adresse suivante: https://apps.who.int/iris/handle/10665/42344","displayName":"Localisation anatomique du spécimen biologique","examples":"C50.1,C18"}},"tumour_histological_type":{"changeType":"deleted","name":"tumour_histological_type","description":"Code histologique (morphologie) du néoplasme selon la classification ICD-O-3 (International Classification of Diseases for Oncology, 3rd Edition) déclaré dans le rapport de pathologie","valueType":"string","meta":{"validationDependency":true,"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"Si le spécimen biologique est une tumeur. Veuillez vous référer au manuel ICD-O-3 à l'adresse suivante https://apps.who.int/iris/handle/10665/42344","valueType":"string","examples":"8260/3,9691/36","displayName":"Type histologique de la tumeur"},"restrictions":{"regex":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$","script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumourNormalDesignation = $row.tumour_normal_designation || '';\n\n        if (!currField && tumourNormalDesignation && tumourNormalDesignation.trim().toLowerCase() === 'tumour') {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumour_normal_designation is Tumour.`,\n            };\n        }\n\n        return result;\n    })"]}}}},"Diagnosis":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}},"submitter_donor_id":{"description":{"left":"Identifiant unique pour le donneur, soumis par l'étude","right":"Identifiant pour le donneur, soumis par l'étude"}},"diagnosis_source_text":{"meta":{"core":{"left":null,"right":true}}},"diagnosis_ICD_code":{"meta":{"core":{"left":true,"right":null}},"restrictions":{"required":{"left":true,"right":null},"regex":{"left":"^((C|c)7(A|a|B|b)|[A-Za-z][0-9]{2})(.[0-9]{1,3}[A-Za-z]{0,1})?$","right":"^[A-TV-Z][0-9][0-9AB].?[0-9A-TV-Z]{0,4}$"},"script":{"left":null,"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n        if(!$field){\n            if ($name === 'diagnosis_ICD_code' && !$row.diagnosis_mondo_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_mondo_code does not exist.`,\n                };\n            } else if ($name === 'diagnosis_mondo_code' && !$row.diagnosis_ICD_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_ICD_code does not exist.`,\n                };\n            }\n        }\n\n        return result;\n    })"]}}},"diagnosis_mondo_code":{"meta":{"core":{"left":true,"right":null}},"restrictions":{"required":{"left":true,"right":null},"regex":{"left":"^((M|m)(O|o)(N|n)(D|d)(O|o)_)[0-9]{7}$","right":"^(MONDO:)[0-9]{7}$"},"script":{"left":null,"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n        if(!$field){\n            if ($name === 'diagnosis_ICD_code' && !$row.diagnosis_mondo_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_mondo_code does not exist.`,\n                };\n            } else if ($name === 'diagnosis_mondo_code' && !$row.diagnosis_ICD_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_ICD_code does not exist.`,\n                };\n            }\n        }\n\n        return result;\n    })"]}}},"age_at_diagnosis":{"valueType":{"left":"integer","right":"number"},"restrictions":{"required":{"left":true,"right":null},"script":{"left":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return {valid: false, message: `Column ${$name} is missing.`};\n        }\n\n        let result = {valid: true, message: 'Ok'};\n        try {\n            const currField = parseFloat($field);\n            if (currField >= 101) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be between 0 and 100, optionally with decimal.`,\n                };\n            }\n        } catch (err) {\n            result = {\n                valid: false,\n                message: `The value '${field}' of the field ${$name} could not be converted to a decimal number. (parseFloat failed)`,\n            };\n        }\n\n        return result;\n    })"],"right":null},"range":{"left":null,"right":{"min":0,"max":100}}}},"stage_group":{"meta":{"dependsOn":{"left":"diagnosis.tumour_staging_system","right":"diagnosis.tumor_staging_system"}}},"t_category":{"meta":{"dependsOn":{"left":"diagnosis.tumour_staging_system","right":"diagnosis.tumor_staging_system"}},"restrictions":{"script":{"left":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n        \n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"],"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"]}}},"n_category":{"meta":{"dependsOn":{"left":"diagnosis.tumour_staging_system","right":"diagnosis.tumor_staging_system"}},"restrictions":{"script":{"left":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n        \n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"],"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"]}}},"m_category":{"meta":{"dependsOn":{"left":"diagnosis.tumour_staging_system","right":"diagnosis.tumor_staging_system"}},"restrictions":{"script":{"left":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n        \n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"],"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"]}}}},"created":{"tumor_staging_system":{"changeType":"created","name":"tumor_staging_system","valueType":"string","description":"Indiquer le système de stadification du cancer utilisé pour effectué le diagnostic primaire","restrictions":{"codeList":["AJCC 8th edition","AJCC 7th edition","Ann Arbor staging system","Binet staging system","Durie-Salmon staging system","FIGO staging system","Lugano staging system","Rai staging system","Revised International staging system (RISS)","St Jude staging system"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if (!currField && isCancer) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the diagnosis' is_cancer flag is 1/true.`,\n            };\n        }\n        return result;\n    })"]},"meta":{"dependsOn":"diagnosis.is_cancer","core":true,"displayName":"Système de stadification"}}},"deleted":{"tumour_staging_system":{"changeType":"deleted","name":"tumour_staging_system","valueType":"string","description":"Indiquer le système de stadification du cancer utilisé pour effectué le diagnostic primaire","restrictions":{"codeList":["AJCC 8th edition","AJCC 7th edition","Ann Arbor staging system","Binet staging system","Durie-Salmon staging system","FIGO staging system","Lugano staging system","Rai staging system","Revised International staging system (RISS)","St Jude staging system"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if (!currField && isCancer) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the diagnosis' is_cancer flag is 1/true.`,\n            };\n        }\n        return result;\n    })"]},"meta":{"dependsOn":"diagnosis.is_cancer","core":true,"displayName":"Système de stadification"}}}},"treatment":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}},"submitter_donor_id":{"description":{"left":"Identifiant unique pour le donneur, soumis par l'étude","right":"Identifiant pour le donneur, soumis par l'étude"}},"submitter_diagnosis_id":{"description":{"left":"Identifiant unique du diagnostic qui est relié à ce traitement","right":"Identifiant du diagnostic qui est relié à ce traitement"}}},"created":{},"deleted":{}},"follow_up":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}},"submitter_donor_id":{"description":{"left":"Identifiant unique pour le donneur, soumis par l'étude","right":"Identifiant pour le donneur, soumis par l'étude"}},"submitter_diagnosis_id":{"description":{"left":"Identifiant unique pour le diagnostic du donneur, soumis par l'étude.","right":"Identifiant pour le diagnostic du donneur, soumis par l'étude."}}},"created":{},"deleted":{}},"exposure":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}}},"created":{},"deleted":{}},"phenotype":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}},"submitter_donor_id":{"description":{"left":"Identifiant unique pour le donneur, soumis par l'étude","right":"Identifiant pour le donneur, soumis par l'étude"}},"phenotype_source_text":{"meta":{"core":{"left":null,"right":true}}},"phenotype_HPO_code":{"restrictions":{"regex":{"left":"^((h|H)(p|P):)[0-9]{7}$","right":"^(HP:)[0-9]{7}$"}}},"age_at_phenotype":{"valueType":{"left":"integer","right":"number"},"meta":{"units":{"left":"days","right":"years"},"core":{"left":true,"right":null}},"restrictions":{"required":{"left":true,"right":null}}}},"created":{},"deleted":{}},"family_relationship":{"updated":{},"created":{},"deleted":{"study_id":{"changeType":"deleted","name":"study_id","valueType":"string","description":"Identifant unique pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},"submitter_family_id":{"changeType":"deleted","name":"submitter_family_id","valueType":"string","description":"Identifant unique pour la famille du donneur, soumis par l'étude","restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"},"meta":{"displayName":"ID de la famille soumis par l'étude","foreignKey":"family.submitter_family_id","validationDependency":true,"primaryId":true,"notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."}},"submitter_donor_id_1":{"changeType":"deleted","description":"Identifiant unique du donneur 1, soumis par l'étude","name":"submitter_donor_id_1","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID du donneur 1 soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},"submitter_donor_id_2":{"changeType":"deleted","description":"Identifiant unique du donneur 2, soumis par l'étude ","name":"submitter_donor_id_2","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID du donneur 2 soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},"family_type":{"changeType":"deleted","name":"family_type","description":"Type de groupe familiale auquel fait partie de le donneur","valueType":"string","restrictions":{"required":true,"codeList":["Case-parent trio","Case-sibling","Twins","Case - affected relative","Other"]},"meta":{"core":true,"displayName":"Type de groupe familial"}},"family_1_2_relationship":{"changeType":"deleted","name":"family_1_2_relationship","description":"Relation du donneur 1 envers le donneur 2","valueType":"string","restrictions":{"required":true,"codeList":["Mother","Father","Brother","Sister","Half-brother","Half-sister","Identical twin","Fraternal twin brother","Fraternal twin sister","Son","Daughter","Maternal grand-mother","Maternal grand-father","Paternal grand-mother","Paternal grand-father","Maternal aunt","Maternal uncle","Paternal aunt","Paternal uncle","Maternal cousin","Paternal cousin","Granddaughter","Grandson","Nephew","Niece","Spouse","Former spouse","Husband","Wife"]},"meta":{"core":true,"displayName":"Relation du donneur 1 envers le donneur 2"}},"family_2_1_relationship":{"changeType":"deleted","name":"family_2_1_relationship","description":"Relation du donneur 2 envers le donneur 1","valueType":"string","restrictions":{"required":true,"codeList":["Mother","Father","Brother","Sister","Half-brother","Half-sister","Identical twin","Fraternal twin brother","Fraternal twin sister","Son","Daughter","Maternal grand-mother","Maternal grand-father","Paternal grand-mother","Paternal grand-father","Maternal aunt","Maternal uncle","Paternal aunt","Paternal uncle","Maternal cousin","Paternal cousin","Granddaughter","Grandson","Nephew","Niece","Spouse","Former spouse","Husband","Wife"]},"meta":{"core":true,"displayName":"Relation du donneur 2 envers le donneur 1"}}}},"family_history":{"updated":{"study_id":{"description":{"left":"Identifant unique pour l'étude","right":"Identifant pour l'étude"}},"submitter_donor_id":{"description":{"left":"Identifiant unique pour le donneur, soumis par l'étude","right":"Identifiant pour le donneur, soumis par l'étude"}}},"created":{},"deleted":{}},"family":{"updated":{},"created":{"study_id":{"changeType":"created","name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},"submitter_family":{"changeType":"created","name":"submitter_family","valueType":"string","description":"Identifant pour la famille du donneur, soumis par l'étude","restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"},"meta":{"displayName":"ID de la famille soumis par l'étude","foreignKey":"family.submitter_family_id","validationDependency":true,"primaryId":true,"notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."}},"submitter_donor_id":{"changeType":"created","description":"Identifiant unique du donneur, soumis par l'étude","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID du donneur soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},"family_type":{"changeType":"created","name":"family_type","description":"Type de groupe familial auquel fait partie le donneur","valueType":"string","restrictions":{"required":true,"codeList":["Case-parent trio","Case-sibling","Twins","Case - affected relative","Other"]},"meta":{"core":true,"displayName":"Type de groupe familial"}},"is_a_proband":{"changeType":"created","description":"Indiquer si le donneur est un proband","name":"is_a_proband","restrictions":{"codeList":["Is a family member","Is a proband","Not applicable"]},"valueType":"string","meta":{"displayName":"Est un proband"}},"relationship_to_proband":{"changeType":"created","name":"relationship_to_proband","description":"Relation du donneur envers le proband","valueType":"string","restrictions":{"required":true,"codeList":["Is the proband","Mother","Father","Brother","Sister","Half-brother","Half-sister","Identical twin","Fraternal twin brother","Fraternal twin sister","Son","Daughter","Maternal grand-mother","Maternal grand-father","Paternal grand-mother","Paternal grand-father","Maternal aunt","Maternal uncle","Paternal aunt","Paternal uncle","Maternal cousin","Paternal cousin","Granddaughter","Grandson","Nephew","Niece","Cousin","Spouse","Former spouse","Husband","Wife"]},"meta":{"core":true,"displayName":"Relation du donneur envers le proband"}}},"deleted":{}}}}
