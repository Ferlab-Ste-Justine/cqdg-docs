{"schemas":{"sample_registration":{"updated":{"sample_type":{"meta":{"notes":{"left":null,"right":"Les codes sont tirés du NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl DNA (NCIT:C449), Ribonucleic Acid (NCIT:C812)"}},"restrictions":{"codeList":{"left":["DNA","RNA"],"right":["NCIT:C449","NCIT:C812"],"data":{"added":["NCIT:C449","NCIT:C812"],"deleted":["DNA","RNA"]}}}}},"created":{},"deleted":{}},"study":{"updated":{"access_requirements":{"meta":{"notes":{"left":"Référez-vous au code du Data Use Ontology https://github.com/EBISPOT/DUO","right":"Référez-vous aux codes du Data Use Ontology pour obtenir la définition des codes https://github.com/EBISPOT/DUO"}},"restrictions":{"script":{"left":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const list = [\n            \"DUO:0000017\",\n            \"DUO:0000018\",\n            \"DUO:0000019\",\n            \"DUO:0000020\",\n            \"DUO:0000021\",\n            \"DUO:0000022\",\n            \"DUO:0000025\",\n            \"DUO:0000026\",\n            \"DUO:0000027\",\n            \"DUO:0000028\",\n            \"DUO:0000029\"\n          ];\n        \n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = $field.trim().replace(/\\s/g, '');\n        const currValues = currField.split(';');\n        let valid = true;\n        currValues.forEach((value) => {\n            if (value && !list.includes(value)) {\n                valid = false;\n            }\n        })\n\n        if (!valid) {\n            result = {\n                valid: false, \n                message: `${$name} must contain a list of these codes: ${list.join(';')} separated by semicolon (;)`\n            }\n        }\n        \n        return result;\n    })"],"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const list = [\n            \"DUO:0000012\",\n            \"DUO:0000015\",\n            \"DUO:0000016\",\n            \"DUO:0000018\",\n            \"DUO:0000019\",\n            \"DUO:0000020\",\n            \"DUO:0000021\",\n            \"DUO:0000022\",\n            \"DUO:0000025\",\n            \"DUO:0000026\",\n            \"DUO:0000027\",\n            \"DUO:0000028\",\n            \"DUO:0000029\",\n            \"DUO:0000043\",\n            \"DUO:0000044\",\n            \"DUO:0000045\",\n            \"DUO:0000046\",\n            \"Biospecimen Access\"\n          ];\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = $field.trim().replace(/\\s/g, '');\n        const currValues = currField.split(';');\n        let valid = true;\n        currValues.forEach((value) => {\n            if (value && !list.includes(value)) {\n                valid = false;\n            }\n        })\n\n        if (!valid) {\n            result = {\n                valid: false,\n                message: `${$name} must contain a list of these codes: ${list.join(';')} separated by semicolon (;)`\n            }\n        }\n\n        return result;\n    })"]},"codeList":{"right":["DUO:0000012","DUO:0000015","DUO:0000016","DUO:0000018","DUO:0000019","DUO:0000020","DUO:0000021","DUO:0000022","DUO:0000025","DUO:0000026","DUO:0000027","DUO:0000028","DUO:0000029","DUO:0000043","DUO:0000044","DUO:0000045","DUO:0000046","Biospecimen Access"],"data":["DUO:0000012","DUO:0000015","DUO:0000016","DUO:0000018","DUO:0000019","DUO:0000020","DUO:0000021","DUO:0000022","DUO:0000025","DUO:0000026","DUO:0000027","DUO:0000028","DUO:0000029","DUO:0000043","DUO:0000044","DUO:0000045","DUO:0000046","Biospecimen Access"]}}}},"created":{},"deleted":{"biospecimen_access":{"changeType":"deleted","name":"biospecimen_access","valueType":"boolean","description":"L'accès aux spécimens biologiques est permis (par consentement)","restrictions":{"required":true},"meta":{"validationDependency":true,"core":true,"displayName":"Accès aux spécimens biologiques "}}}},"participant":{"updated":{"age_at_recruitment":{"restrictions":{"required":{"left":true,"right":false}}}},"created":{},"deleted":{}},"biospecimen":{"updated":{"biospecimen_tissue_source":{"meta":{"notes":{"left":"Termes tirés de NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl","right":"Les codes sont tirés du NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl Blood (NCIT:C12434), Saliva (NCIT:C13275), Solid Tissue Sample (NCIT:C164014), Bone Marrow (NCIT:C12431)"}},"restrictions":{"codeList":{"left":["Blood","Bone marrow","Saliva","Solid tissue"],"right":["NCIT:C12434","NCIT:C13275","NCIT:C164014","NCIT:C12431"],"data":{"added":["NCIT:C12434","NCIT:C13275","NCIT:C164014","NCIT:C12431"],"deleted":["Blood","Bone marrow","Saliva","Solid tissue"]}}}},"cancer_biospecimen_type":{"meta":{"notes":{"left":null,"right":"Les codes sont tirés du NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl Derived Cell Line (NCIT:C156445), Metastatic Tumor Sample (NCIT:156440), Sample Derived from New Primary (NCIT:156441), Tumor-Adjacent Normal Specimen (NCIT:164032), Tumor Tissue (NCIT:C18009), Normal Tissue Segment (NCIT:C162623), Cell Line-Derived Xenograft (NCIT:C156443)"}},"restrictions":{"codeList":{"left":["Derived Cell Line","Metastatic Tumor Sample","Sample Derived from New Primary","Tumor-Adjacent Normal Specimen","Tumor Tissue","Normal Tissue Segment","Cell Line-Derived Xenograft"],"right":["NCIT:C156445","NCIT:156440","NCIT:156441","NCIT:164032","NCIT:C18009","NCIT:C162623","NCIT:C156443"],"data":{"added":["NCIT:C156445","NCIT:156440","NCIT:156441","NCIT:164032","NCIT:C18009","NCIT:C162623","NCIT:C156443"],"deleted":["Derived Cell Line","Metastatic Tumor Sample","Sample Derived from New Primary","Tumor-Adjacent Normal Specimen","Tumor Tissue","Normal Tissue Segment","Cell Line-Derived Xenograft"]}}}}},"created":{},"deleted":{}},"Diagnosis":{"updated":{},"created":{"submitter_participant_id":{"changeType":"created","name":"submitter_participant_id","valueType":"string","description":"Identifiant pour le participant soumis par l'étude","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"Submitter participant ID","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}}},"deleted":{"submitter_diagnosis_id":{"changeType":"deleted","name":"submitter_diagnosis_id","valueType":"string","description":"Identifiant unique pour le diagnostic du participant soumis par l'étude","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"ID du diagnostic soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}}}}}}
