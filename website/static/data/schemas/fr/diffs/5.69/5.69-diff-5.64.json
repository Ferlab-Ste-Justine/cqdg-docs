{"schemas":{"sample_registration":{"updated":{"study_id":{"description":{"left":"Identifant pour l'étude","right":"Identifant pour l'étude."}},"submitter_participant_id":{"description":{"left":"Identifiant pour le participant soumis par l'étude.","right":"Identifiant pour le participant, soumis par l'étude."}}},"created":{},"deleted":{}},"study":{"updated":{"keyword":{"meta":{"notes":{"left":"Liste de mots-clés délimitée avec des points-virgules (;)","right":"liste de mots-clés délimitée avec des points-virgules (;)"}}},"access_limitations":{"meta":{"notes":{"left":"Référez-vous au Data Use Ontology https://github.com/EBISPOT/DUO","right":"Référez-vous au code du Data Use Ontology https://github.com/EBISPOT/DUO"}}}},"created":{},"deleted":{}},"participant":{"updated":{"submitter_participant_id":{"description":{"left":"Identifiant unique pour le participant soumis par l'étude","right":"Identifiant unique pour le participant, soumis par l'étude"}},"age_at_recruitment":{"description":{"left":"Âge (en jours) du participant au moment du recrutement","right":"Âge du participant au moment du recrutement"},"meta":{"displayName":{"left":"Âge (en jours) au recrutement","right":"Âge au recruitment"},"units":{"left":"days","right":null}}},"sex":{"meta":{"notes":{"left":"Information obtenue des données médico-administratives ou déclarée par le participant","right":"Information obtenue des données médico-administrative ou déclarée par le participant"}}},"ethnicity":{"meta":{"notes":{"left":"Les Canadiens français désignent les Canadiens dont les ancêtres font partie des colons français venus s'installer au Canada. Les Canadiens anglais désignent les Canadiens anglophones d'ascendance et de culture anglaise.","right":"Les Canadiens français désigne les Canadiens dont les ancêtres font partie des colons français venus s'installés au Canada. Les Canadiens anglais désigne les Canadiens anglophones d'ascendance et de culture anglaise. Autochtone (Premières Nations, Métis, Inuits), blancs (ascendance européenne), arabes (ex; Égypte, Irak, Jordanie, Liban) , Latino-américain (hispanique), noire (Afrique / Caraïbes), d'Asie de l'Est (ex: Chine, Japon, Corée, Taïwan), d'Asie occidentale (ex: Turquie, Iran, Afghanistan), Asie du Sud-Est (ex: Malaisie, Indonésie, Viet Nam), Asie du Sud (ex: Inde, Sri Lanka, Pakistan, Bangladesh), Philippin, Inconnu, Autre"}}},"age_of_death":{"description":{"left":"Âge du participant (en jours) au moment de son décès","right":"Age du participant au moment de son décès (en jour)"},"meta":{"core":{"left":true,"right":"true"},"displayName":{"left":"Âge (en jours) du décès","right":"Age de décès"}}}},"created":{},"deleted":{}},"biospecimen":{"updated":{"submitter_participant_id":{"description":{"left":"Identifiant pour le participant soumis par l'étude","right":"Identifiant pour le participant, soumis par l'étude"}},"submitter_biospecimen_id":{"description":{"left":"Identifiant unique pour le spécimen biologique soumis par l'étude","right":"Identifiant unique pour le spécimen biologique, soumis par l'étude"},"meta":{"displayName":{"left":"ID du spécimen biologique soumis par l'étude","right":"ID du biospécimen soumis par l'étude"}}},"age_biospecimen_collection":{"description":{"left":"Âge du participant (en jours) au moment de la collecte du spécimen biologique","right":"Age du participant (en jours) au moment de la collecte du spécimen biologique"},"meta":{"displayName":{"left":"Âge (en jours) au moment de la collecte du spécimen biologique","right":"Age (en jours) au moment de la collecte du spécimen biologique"}},"restrictions":{"range":{"left":{"min":0,"max":40000},"right":{"min":0,"max":4000}}}},"tumor_normal_designation":{"description":{"left":"Le spécimen biologique provient d'un tissu tumoral ou normal","right":"Le spécimen biologique provient de tissu tumoral ou normal"},"meta":{"notes":{"left":"Indiquez `Not applicable' si le spécimen biologique n'a pas été analysé.","right":"Indiquer `Not applicable' si le biospécimen n'a pas été analysé."}}},"cancer_biospecimen_type":{"restrictions":{"script":{"left":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"],"right":null},"required":{"left":null,"right":true}}},"cancer_biospecimen_anatomic_location_source_text":{"meta":{"notes":{"left":"Utilisez le terme inscrit au moment de la collecte du spécimen biologique","right":"Utiliser le terme inscrit au moment de la collecte du biospécimen"}},"restrictions":{"script":{"left":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"],"right":null},"required":{"left":null,"right":true}}},"biospecimen_anatomic_location_ncit_code":{"description":{"left":"Indiquer le code NCIT représentant la localisation anatomique du spécimen biologique","right":"Indiquer le code NCIT représentant la localisation anatomic du spécimen biologique"},"restrictions":{"regex":{"left":"^ncit:C\\d+$","right":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$"},"script":{"left":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"],"right":null},"required":{"left":null,"right":true}}},"tumor_histological_type_source_text":{"meta":{"notes":{"left":"Si le spécimen biologique est une tumeur, veuillez utiliser le terme fourni dans le rapport de pathologie","right":"Si le spécimen biologique est une tumeur. Veuillez utiliser le terme fourni dans le rapport de pathologie"}},"restrictions":{"script":{"left":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"],"right":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumourNormalDesignation = $row.tumour_normal_designation || '';\n\n        if (!currField && tumourNormalDesignation && tumourNormalDesignation.trim().toLowerCase() === 'tumour') {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumour_normal_designation is Tumour.`,\n            };\n        }\n\n        return result;\n    })"]},"regex":{"left":null,"right":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$"}}},"tumor_histological_type_ncit_code":{"description":{"left":"Code histologique du néoplasme selon le NCI Thesaurus (NCIt)","right":"Code histologique du néoplasme selon le NCI Thesaurus (NCIt) at http://purl.obolibrary.org/obo/ncit.owl"},"meta":{"notes":{"left":"Si le spécimen biologique est une tumeur, référez-vous au NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl","right":"Si le biospécimen est une tumeur, référez-vous au NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl"}},"restrictions":{"regex":{"left":"^ncit:C\\d+$","right":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$"},"script":{"left":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"],"right":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumourNormalDesignation = $row.tumour_normal_designation || '';\n\n        if (!currField && tumourNormalDesignation && tumourNormalDesignation.trim().toLowerCase() === 'tumour') {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumour_normal_designation is Tumour.`,\n            };\n        }\n\n        return result;\n    })"]}}}},"created":{},"deleted":{}},"Diagnosis":{"updated":{"submitter_diagnosis_id":{"description":{"left":"Identifiant unique pour le diagnostic du participant soumis par l'étude","right":"Identifiant unique pour le diagnostic du participant, soumis par l'étude"}},"age_at_diagnosis":{"description":{"left":"Âge du participant (en jours) au moment du diagnostic de la condition","right":"Age (en jours) au moment du diagnostic de la condition"},"meta":{"displayName":{"left":"Âge (en jours) au diagnostic","right":"Age au diagnostic"}}},"stage_group":{"restrictions":{"script":{"left":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if ($field && !$row.tumor_staging_system) {\n            result = {\n                valid: false,\n                message: `Please provide a value for the tumor_staging_system or leave stage_group blank`,\n            };\n        }\n\n        if (isCancer && !$field) {\n            result = {\n                valid: false,\n                message: `The stage_group mandatory if the is_cancer flag is set to 1/true`,\n            };\n        }\n\n        if ($field) {\n            let codeList = [];\n            switch ($row.tumor_staging_system && $row.tumor_staging_system.trim().toLowerCase()) {\n                case 'revised international staging system (riss)':\n                    codeList = ['stage i', 'stage ii', 'stage iii'];\n                    break;\n                case 'lugano staging system':\n                    codeList = [\n                        'stage i',\n                        'stage ia',\n                        'stage ib',\n                        'stage ie',\n                        'stage iea',\n                        'stage ieb',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iie',\n                        'stage iiea',\n                        'stage iieb',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iv',\n                        'stage iva',\n                        'stage ivb',\n                    ];\n                    break;\n                case 'st jude staging system':\n                    codeList = ['stage i', 'stage ii', 'stage iii', 'stage iv'];\n                    break;\n                case 'ann arbor staging system':\n                    codeList = [\n                        'stage i',\n                        'stage ia',\n                        'stage ib',\n                        'stage ie',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iie',\n                        'stage iis',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iiie',\n                        'stage iiis',\n                        'stage iv',\n                        'stage iva',\n                        'stage ivb',\n                        'stage ive',\n                        'stage ivs',\n                    ];\n                    break;\n                case 'rai staging system':\n                    codeList = ['stage 0', 'stage i', 'stage ii', 'stage iii', 'stage iv'];\n                    break;\n                case 'durie-salmon staging system':\n                    codeList = [\n                        'stage 1',\n                        'stage 1a',\n                        'stage 1b',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                    ];\n                    break;\n                case 'figo staging system':\n                    codeList = [\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage iia',\n                        'stage iab',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iva',\n                        'stage ivb',\n                    ];\n                    break;\n                case 'binet staging system':\n                    codeList = ['stage a', 'stage b', 'stage c'];\n                    break;\n                case 'ajcc 8th edition':\n                    codeList = [\n                        'stage 0',\n                        'stage 0a',\n                        'stage 0is',\n                        'stage i',\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ia3',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage ic',\n                        'stage ie',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iia1',\n                        'stage iia2',\n                        'stage iib',\n                        'stage iic',\n                        'stage iie',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiia1',\n                        'stage iiia2',\n                        'stage iiib',\n                        'stage iiic',\n                        'stage iiic1',\n                        'stage iiic2',\n                        'stage iiid',\n                        'stage iv',\n                        'stage iva',\n                        'stage iva1',\n                        'stage iva2',\n                        'stage ivb',\n                        'stage ivc',\n                        'occult carcinoma',\n                        'stage 1',\n                    ];\n                    break;\n                case 'ajcc 7th edition':\n                    codeList = [\n                        'stage 0',\n                        'stage 0a',\n                        'stage 0is',\n                        'stage i',\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage ic',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iia1',\n                        'stage iia2',\n                        'stage iib',\n                        'stage iic',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iiic',\n                        'stage iiic1',\n                        'stage iiic2',\n                        'stage iv',\n                        'stage iva',\n                        'stage iva1',\n                        'stage iva2',\n                        'stage ivb',\n                        'stage ivc',\n                        'occult carcinoma',\n                        'stage 1',\n                    ];\n                    break;\n                default:\n                    codelist = [];\n            }\n\n            if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n                const msg = `'${$field}' is not a permissible value. When 'tumor_staging_system' is set to '${\n                    $row.tumor_staging_system\n                }', 'stage_group' must be one of the following: \\n${codeList\n                    .map((code) => `- \"${code}\"`)\n                    .join('\\n')}`;\n\n                result.valid = false;\n                result.message = msg;\n            }\n        }\n        return result;\n    })"],"right":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if ($field && !$row.tumour_staging_system) {\n            result = {\n                valid: false,\n                message: `Please provide a value for the tumour_staging_system or leave stage_group blank`,\n            };\n        }\n\n        if (isCancer && !$field) {\n            result = {\n                valid: false,\n                message: `The stage_group mandatory if the is_cancer flag is set to 1/true`,\n            };\n        }\n\n        if ($field) {\n            let codeList = [];\n            switch ($row.tumour_staging_system && $row.tumour_staging_system.trim().toLowerCase()) {\n                case 'revised international staging system (riss)':\n                    codeList = ['stage i', 'stage ii', 'stage iii'];\n                    break;\n                case 'lugano staging system':\n                    codeList = [\n                        'stage i',\n                        'stage ia',\n                        'stage ib',\n                        'stage ie',\n                        'stage iea',\n                        'stage ieb',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iie',\n                        'stage iiea',\n                        'stage iieb',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iv',\n                        'stage iva',\n                        'stage ivb',\n                    ];\n                    break;\n                case 'st jude staging system':\n                    codeList = ['stage i', 'stage ii', 'stage iii', 'stage iv'];\n                    break;\n                case 'ann arbor staging system':\n                    codeList = [\n                        'stage i',\n                        'stage ia',\n                        'stage ib',\n                        'stage ie',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iie',\n                        'stage iis',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iiie',\n                        'stage iiis',\n                        'stage iv',\n                        'stage iva',\n                        'stage ivb',\n                        'stage ive',\n                        'stage ivs',\n                    ];\n                    break;\n                case 'rai staging system':\n                    codeList = ['stage 0', 'stage i', 'stage ii', 'stage iii', 'stage iv'];\n                    break;\n                case 'durie-salmon staging system':\n                    codeList = [\n                        'stage 1',\n                        'stage 1a',\n                        'stage 1b',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                    ];\n                    break;\n                case 'figo staging system':\n                    codeList = [\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage iia',\n                        'stage iab',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iva',\n                        'stage ivb',\n                    ];\n                    break;\n                case 'binet staging system':\n                    codeList = ['stage a', 'stage b', 'stage c'];\n                    break;\n                case 'ajcc 8th edition':\n                    codeList = [\n                        'stage 0',\n                        'stage 0a',\n                        'stage 0is',\n                        'stage i',\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ia3',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage ic',\n                        'stage ie',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iia1',\n                        'stage iia2',\n                        'stage iib',\n                        'stage iic',\n                        'stage iie',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiia1',\n                        'stage iiia2',\n                        'stage iiib',\n                        'stage iiic',\n                        'stage iiic1',\n                        'stage iiic2',\n                        'stage iiid',\n                        'stage iv',\n                        'stage iva',\n                        'stage iva1',\n                        'stage iva2',\n                        'stage ivb',\n                        'stage ivc',\n                        'occult carcinoma',\n                        'stage 1',\n                    ];\n                    break;\n                case 'ajcc 7th edition':\n                    codeList = [\n                        'stage 0',\n                        'stage 0a',\n                        'stage 0is',\n                        'stage i',\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage ic',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iia1',\n                        'stage iia2',\n                        'stage iib',\n                        'stage iic',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iiic',\n                        'stage iiic1',\n                        'stage iiic2',\n                        'stage iv',\n                        'stage iva',\n                        'stage iva1',\n                        'stage iva2',\n                        'stage ivb',\n                        'stage ivc',\n                        'occult carcinoma',\n                        'stage 1',\n                    ];\n                    break;\n                default:\n                    codelist = [];\n            }\n\n            if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n                const msg = `'${$field}' is not a permissible value. When 'tumour_staging_system' is set to '${\n                    $row.tumour_staging_system\n                }', 'stage_group' must be one of the following: \\n${codeList\n                    .map((code) => `- \"${code}\"`)\n                    .join('\\n')}`;\n\n                result.valid = false;\n                result.message = msg;\n            }\n        }\n        return result;\n    })"]}}}},"created":{},"deleted":{}},"treatment":{"updated":{"submitter_participant_id":{"description":{"left":"Identifiant pour le participant soumis par l'étude","right":"Identifiant pour le participant, soumis par l'étude"}}},"created":{},"deleted":{}},"follow_up":{"updated":{"submitter_participant_id":{"description":{"left":"Identifiant pour le participant soumis par l'étude","right":"Identifiant pour le participant, soumis par l'étude"}},"submitter_diagnosis_id":{"description":{"left":"Identifiant pour le diagnostic du participant soumis par l'étude","right":"Identifiant pour le diagnostic du participant, soumis par l'étude."}},"days_to_follow_up":{"description":{"left":"Nombre de jours entre le diagnostic et la visite de suivi","right":"Intervalle de temps (en jours) entre le diagnostic et la visite de suivi"}},"relapse_interval":{"description":{"left":"Intervalle entre la fin du traitement de première intention et la progression de la maladie (en jours)","right":"Intervalle entre la fin du traitement de première intention et la progressiojn de la maladie (en jours)"},"meta":{"notes":{"left":"Ce champ indique la durée de l'intervalle sans maladie en jours dans le cas où la maladie était non-détectée suite au traitement primaire, puis une rechute, une récidive ou une progression (pour les tumeurs liquides) s'est produite par la suite","right":"Ce champ indique la durée de l'intervalle sans maladie, en jours dans le cas où la maladie était non-détectée suite au traitement primaire, puis une rechute, une récidive ou une progression (pour les tumeurs liquides) s'est produite par la suite"}}}},"created":{},"deleted":{}},"exposure":{"updated":{"submitter_participant_id":{"description":{"left":"Identifiant unique pour le participant soumis par l'étude","right":"Identifiant unique pour le participant, soumis par l'étude"}},"smoking_status":{"restrictions":{"codeList":{"left":["Current every day smoker","Current some day smoker","Former smoker","Never smoker","Smoker, current status unknown","Unknown if ever smoked","Current heavy tobacco smoker (more than 20)","Current light tobacco smoker"],"right":["Current every day smoker","Current some day smoker","Former smoker","Never smoker","Smoker, current status unknown","Unknown if ever smoked","Current Heavy tobacco smoker (more than 20)","Current Light tobacco smoker"],"data":{"added":["Current Heavy tobacco smoker (more than 20)","Current Light tobacco smoker"],"deleted":["Current heavy tobacco smoker (more than 20)","Current light tobacco smoker"]}}}}},"created":{},"deleted":{}},"phenotype":{"updated":{"submitter_participant_id":{"description":{"left":"Identifiant pour le participant soumis par l'étude","right":"Identifiant pour le participant, soumis par l'étude"}},"phenotype_HPO_code":{"meta":{"notes":{"left":"Fournissez le code exact tel qu'il apparait dans HPO (par example: HP:0001161. Veuillez-vous référer à https://hpo.jax.org/app/.","right":"Fournissez le code exact tels qu'il apparait dans HPO (par example: HP:0001161. Veuillez-vous référer à https://hpo.jax.org/app/."}}},"age_at_phenotype":{"description":{"left":"Âge du participant (en jours) où le phénotype a été observé chez ce participant","right":"Age (en jour) où le phénotype a été observé chez ce participant"},"meta":{"displayName":{"left":"Âge (en jours) où le phénotype a été observé","right":"Age où le phénotype a été observé"}}}},"created":{},"deleted":{}},"family":{"updated":{"submitter_family":{"description":{"left":"Identifant pour la famille du participant soumis par l'étude","right":"Identifant pour la famille du participant, soumis par l'étude"}},"submitter_participant_id":{"description":{"left":"Identifiant unique du participant soumis par l'étude","right":"Identifiant unique du participant, soumis par l'étude"}},"relationship_to_proband":{"description":{"left":"Relation du participant envers le sujet proposant","right":"Relation du participant envers le proband"},"meta":{"displayName":{"left":"Relation du participant envers le sujet proposant","right":"Relation du participant envers le proband"}}}},"created":{},"deleted":{}},"family_history":{"updated":{"submitter_participant_id":{"description":{"left":"Identifiant pour le participant soumis par l'étude","right":"Identifiant pour le participant, soumis par l'étude"}}},"created":{},"deleted":{}}}}
