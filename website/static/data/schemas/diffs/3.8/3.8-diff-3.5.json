[["donor.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["specimen.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["primary_diagnosis.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["treatment.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["follow_up.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["phenotype.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["family.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["family_relationship.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["family_history.study_id",{"left":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"deleted","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study.","meta":{"validationDependency":true,"primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["sample_registration.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"examples":"TEST-CA","notes":"This is the unique id that is assigned to your program.  If you have logged into the platform, this is the Program Id that you see in the Program Services area. For example, TEST-CA is a Program ID.","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"examples":"TEST-CA","notes":"This is the unique id that is assigned to your program.  If you have logged into the platform, this is the Program Id that you see in the Program Services area. For example, TEST-CA is a Program ID.","displayName":"Program ID"},"restrictions":{"required":true}}}}],["sample_registration.submitter_donor_id",{"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"90234,BLD_donor_89,AML-90","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"90234,BLD_donor_89,AML-90","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["sample_registration.gender",{"right":{"name":"gender","valueType":"string","description":"Description of the donor self-reported gender. Gender is described as the assemblage of properties that distinguish people on the basis of their societal roles.","meta":{"validationDependency":true,"core":true,"displayName":"Gender"},"restrictions":{"required":true,"codeList":["Female","Male","Other"]}},"diff":{"type":"created","data":{"name":"gender","valueType":"string","description":"Description of the donor self-reported gender. Gender is described as the assemblage of properties that distinguish people on the basis of their societal roles.","meta":{"validationDependency":true,"core":true,"displayName":"Gender"},"restrictions":{"required":true,"codeList":["Female","Male","Other"]}}}}],["sample_registration.submitter_specimen_id",{"right":{"name":"submitter_specimen_id","valueType":"string","description":"Unique identifier of the specimen, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"LAML_PO,00445,THY_099-tumour","displayName":"Submitter Specimen ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_specimen_id","valueType":"string","description":"Unique identifier of the specimen, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"LAML_PO,00445,THY_099-tumour","displayName":"Submitter Specimen ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["sample_registration.specimen_tissue_source",{"right":{"name":"specimen_tissue_source","valueType":"string","description":"Tissue source of the biospecimen.","meta":{"validationDependency":true,"core":true,"displayName":"Specimen Tissue Source"},"restrictions":{"required":true,"codeList":["Blood derived - bone marrow","Blood derived - peripheral blood","Blood derived","Bone marrow","Bone","Buccal cell","Buffy coat","Cerebellum","Cerebrospinal fluid","Endometrium","Esophagus","Intestine","Lymph node","Mononuclear cells from bone marrow","Other","Plasma","Pleural effusion","Saliva","Serum","Skin","Solid tissue","Spleen","Sputum","Stomach","Tonsil","Urine"]}},"diff":{"type":"created","data":{"name":"specimen_tissue_source","valueType":"string","description":"Tissue source of the biospecimen.","meta":{"validationDependency":true,"core":true,"displayName":"Specimen Tissue Source"},"restrictions":{"required":true,"codeList":["Blood derived - bone marrow","Blood derived - peripheral blood","Blood derived","Bone marrow","Bone","Buccal cell","Buffy coat","Cerebellum","Cerebrospinal fluid","Endometrium","Esophagus","Intestine","Lymph node","Mononuclear cells from bone marrow","Other","Plasma","Pleural effusion","Saliva","Serum","Skin","Solid tissue","Spleen","Sputum","Stomach","Tonsil","Urine"]}}}}],["sample_registration.tumour_normal_designation",{"right":{"name":"tumour_normal_designation","valueType":"string","description":"Description of specimens tumour/normal status for data processing.","restrictions":{"required":true,"codeList":["Normal","Tumour"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tumour Normal Designation"}},"diff":{"type":"created","data":{"name":"tumour_normal_designation","valueType":"string","description":"Description of specimens tumour/normal status for data processing.","restrictions":{"required":true,"codeList":["Normal","Tumour"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tumour Normal Designation"}}}}],["sample_registration.specimen_type",{"right":{"name":"specimen_type","valueType":"string","description":"Description of the kind of specimen that was collected with respect to tumour/normal tissue origin.","restrictions":{"required":true,"codeList":["Cell line - derived from normal","Cell line - derived from tumour","Cell line - derived from xenograft tumour","Metastatic tumour - additional metastatic","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour","Normal - tissue adjacent to primary tumour","Normal","Primary tumour - additional new primary","Primary tumour - adjacent to normal","Primary tumour","Recurrent tumour","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line"],"script":["(function validate() {\n\n        const row = $row;\n        let result = {valid: true, message: \"Ok\"};\n        \n        const designation = row.tumour_normal_designation.trim().toLowerCase();\n        const specimen_type = $field.trim().toLowerCase();\n        \n        if (designation === \"normal\"){\n            const validTypes = [\"normal\", \"normal - tissue adjacent to primary tumour\", \"cell line - derived from normal\"];\n            if (!validTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type can only be set to a normal type value (Normal, Normal - tissue adjacent to primary tumour, or Cell line - derived from normal) when tumour_normal_designation is set to Normal.\"};\n            }\n        }\n        else if (designation === \"tumour\") {\n            const invalidTypes = [\"normal\", \"cell line - derived from normal\"];\n            if (invalidTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type cannot be set to normal type value (Normal or Cell line - derived from normal) when tumour_normal_designation is set to Tumour.\"};\n            }\n        }\n        return result;\n    })()"]},"meta":{"validationDependency":true,"core":true,"displayName":"Specimen Type"}},"diff":{"type":"created","data":{"name":"specimen_type","valueType":"string","description":"Description of the kind of specimen that was collected with respect to tumour/normal tissue origin.","restrictions":{"required":true,"codeList":["Cell line - derived from normal","Cell line - derived from tumour","Cell line - derived from xenograft tumour","Metastatic tumour - additional metastatic","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour","Normal - tissue adjacent to primary tumour","Normal","Primary tumour - additional new primary","Primary tumour - adjacent to normal","Primary tumour","Recurrent tumour","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line"],"script":["(function validate() {\n\n        const row = $row;\n        let result = {valid: true, message: \"Ok\"};\n        \n        const designation = row.tumour_normal_designation.trim().toLowerCase();\n        const specimen_type = $field.trim().toLowerCase();\n        \n        if (designation === \"normal\"){\n            const validTypes = [\"normal\", \"normal - tissue adjacent to primary tumour\", \"cell line - derived from normal\"];\n            if (!validTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type can only be set to a normal type value (Normal, Normal - tissue adjacent to primary tumour, or Cell line - derived from normal) when tumour_normal_designation is set to Normal.\"};\n            }\n        }\n        else if (designation === \"tumour\") {\n            const invalidTypes = [\"normal\", \"cell line - derived from normal\"];\n            if (invalidTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type cannot be set to normal type value (Normal or Cell line - derived from normal) when tumour_normal_designation is set to Tumour.\"};\n            }\n        }\n        return result;\n    })()"]},"meta":{"validationDependency":true,"core":true,"displayName":"Specimen Type"}}}}],["sample_registration.submitter_sample_id",{"right":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the sample, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"hnc_12,CCG_34_94583,BRCA47832-3239","displayName":"Submitter Sample ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the sample, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"hnc_12,CCG_34_94583,BRCA47832-3239","displayName":"Submitter Sample ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["sample_registration.sample_type",{"right":{"name":"sample_type","valueType":"string","description":"Description of the type of molecular sample used for testing.","meta":{"validationDependency":true,"core":true,"displayName":"Sample Type"},"restrictions":{"required":true,"codeList":["Amplified DNA","ctDNA","Other DNA enrichments","Other RNA fractions","polyA+ RNA","Ribo-Zero RNA","Total DNA","Total RNA"]}},"diff":{"type":"created","data":{"name":"sample_type","valueType":"string","description":"Description of the type of molecular sample used for testing.","meta":{"validationDependency":true,"core":true,"displayName":"Sample Type"},"restrictions":{"required":true,"codeList":["Amplified DNA","ctDNA","Other DNA enrichments","Other RNA fractions","polyA+ RNA","Ribo-Zero RNA","Total DNA","Total RNA"]}}}}],["donor.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}}}}],["specimen.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}}}}],["primary_diagnosis.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}}}}],["treatment.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}}}}],["follow_up.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}}}}],["exposure.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"displayName":"Program ID"}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"displayName":"Program ID"}}}}],["phenotype.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}}}}],["family.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"}}}}],["family_relationship.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"}}}}],["family_history.program_id",{"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"}},"diff":{"type":"created","data":{"name":"program_id","valueType":"string","description":"Unique identifier of the CQDG program.","restrictions":{"required":true},"meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"}}}}]]