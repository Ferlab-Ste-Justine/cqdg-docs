[["sample_registration.submitter_donor_id",{"left":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["sample_registration.submitter_biospecimen_id",{"left":{"name":"submitter_biospecimen_id","description":"Unique identifier of the biospecimen, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Biospecimen ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_biospecimen_id","description":"Unique identifier of the biospecimen, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Biospecimen ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["sample_registration.submitter_sample_id",{"left":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the molecular sample, assigned by the data provider","meta":{"primaryId":true,"validationDependency":true,"displayName":"Submitter Sample ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the molecular sample, assigned by the data provider","meta":{"primaryId":true,"validationDependency":true,"displayName":"Submitter Sample ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["study.short_name",{"left":{"name":"short_name","valueType":"string","description":"Accronym or short name of the Study","meta":{"core":true,"displayName":"Short name of the Study"}},"right":{"name":"short_name","valueType":"string","description":"Accronym or short name of the Study","meta":{"displayName":"Short name of the Study"}},"diff":{"meta":{"core":{"type":"deleted","data":true}}}}],["donor.submitter_donor_id",{"left":{"description":"Unique identifier of the donor, assigned by the data provider","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"description":"Unique identifier of the donor, assigned by the data provider","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["biospecimen.submitter_donor_id",{"left":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["biospecimen.submitter_biospecimen_id",{"left":{"name":"submitter_biospecimen_id","description":"Unique identifier of the biospecimen, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Biospecimen ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_biospecimen_id","description":"Unique identifier of the biospecimen, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Biospecimen ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["biospecimen.submitter_diagnosis_id",{"left":{"name":"submitter_diagnosis_id","valueType":"string","description":"Indicate the diagnosis event in the clinical timeline that this biospecimen acquisition was related to","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"not required if the biospecimen was not collected for a diagnostic purpose #/notes/submitter_id"},"restrictions":{"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_diagnosis_id","valueType":"string","description":"Indicate the diagnosis event in the clinical timeline that this biospecimen acquisition was related to","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}},"restrictions":{"required":{"type":"created","data":true}}}}],["Diagnosis.submitter_donor_id",{"left":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["Diagnosis.submitter_diagnosis_id",{"left":{"name":"submitter_diagnosis_id","valueType":"string","description":"Unique identifier of the diagnosis event, assigned by the data provider","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_diagnosis_id","valueType":"string","description":"Unique identifier of the diagnosis event, assigned by the data provider","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["Diagnosis.diagnosis_ICD_category",{"left":{"name":"diagnosis_ICD_category","valueType":"string","description":"Disease category as defined in the WHO ICD-10","restrictions":{"required":true},"meta":{"core":true,"examples":"Neoplasms, Diseases of the nervous system","notes":"This refers to the body systems chapters of the WHO ICD-10, https://apps.who.int/classifications/apps/icd/ClassificationDownload/DLArea/Download.aspx","displayName":"ICD-10 Disease category"}},"right":{"name":"diagnosis_ICD_category","valueType":"string","description":"Disease category as defined in the WHO ICD-10","restrictions":{"required":true},"meta":{"core":true,"notes":"This refers to the body systems chapters of the WHO ICD-10, https://apps.who.int/classifications/apps/icd/ClassificationDownload/DLArea/Download.aspx","displayName":"ICD-10 Disease category"}},"diff":{"meta":{"examples":{"type":"deleted","data":"Neoplasms, Diseases of the nervous system"}}}}],["Diagnosis.diagnosis_ICD_term",{"left":{"name":"diagnosis_ICD_term","valueType":"string","description":"ICD-10 code and term used to define a condtion","restrictions":{"required":true},"meta":{"core":true,"examples":"C41.1: Malignant neoplasms of mandible, C16.9: Malignant neoplasm of stomach, unspecified","notes":"Write code and full term used in ICD-10 separated by a (:). For WHO ICD-10 codes, refer to https://apps.who.int/classifications/apps/icd/ClassificationDownload/DLArea/Download.aspx","displayName":"Diagnosis ICD-10 code and term"}},"right":{"name":"diagnosis_ICD_term","valueType":"string","description":"ICD-10 code and term used to define a condtion","restrictions":{"required":true,"regex":"^[C|D][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$"},"meta":{"core":true,"examples":"C41.1: Malignant neoplasms of mandible, C16.9: Malignant neoplasm of stomach, unspecified","notes":"Write code and full term used in ICD-10 separated by a (:). For WHO ICD-10 codes, refer to https://apps.who.int/classifications/apps/icd/ClassificationDownload/DLArea/Download.aspx","displayName":"Diagnosis ICD-10 code and term"}},"diff":{"restrictions":{"regex":{"type":"created","data":"^[C|D][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$"}}}}],["Diagnosis.tumour_staging_system",{"left":{"name":"tumour_staging_system","valueType":"string","description":"Indicate the tumour staging system used to stage the cancer at the time of the diagnosis, prior to treatment","restrictions":{"codeList":["AJCC 8th edition","AJCC 7th edition","Ann Arbor staging system","Binet staging system","Durie-Salmon staging system","FIGO staging system","Lugano staging system","Rai staging system","Revised International staging system (RISS)","St Jude staging system"]},"meta":{"dependsOn":"diagnosis.is_cancer","core":true,"displayName":"Tumour Staging System"}},"right":{"name":"tumour_staging_system","valueType":"string","description":"Indicate the tumour staging system used to stage the cancer at the time of the diagnosis, prior to treatment","restrictions":{"script":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"codeList":["AJCC 8th edition","AJCC 7th edition","Ann Arbor staging system","Binet staging system","Durie-Salmon staging system","FIGO staging system","Lugano staging system","Rai staging system","Revised International staging system (RISS)","St Jude staging system"]},"meta":{"dependsOn":"diagnosis.is_cancer","core":true,"displayName":"Tumour Staging System"}},"diff":{"restrictions":{"script":{"type":"created","data":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"]}}}}],["Diagnosis.clinical_stage_group",{"left":{"name":"clinical_stage_group","description":"Stage group of the tumour, as assigned by the reporting clinical_tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.)","valueType":"string","restrictions":{"codeList":["Stage 0","Stage 0a","Stage 0is","Stage I","Stage IA","Stage IA1","Stage IA2","Stage IA3","Stage IB","Stage IB1","Stage IB2","Stage IC","Stage IS","Stage IE","Stage II","Stage IIA","Stage IIA1","Stage IIA2","Stage IIE","Stage IIB","Stage IIC","Stage III","Stage IIIA","Stage IIIA1","Stage IIIA2","Stage IIIB","Stage IIIC","Stage IIIC1","Stage IIIC2","Stage IIID","Stage IV","Stage IVA","Stage IVA1","Stage IVA2","Stage IVB","Stage IVC","Occult carcinoma","Stage 1","Stage 1A","Stage 1B","Stage ISA","Stage ISB","Stage IEA","Stage IEB","Stage IIEA","Stage IIEB","Stage IIES","Stage IIESA","Stage IIESB","Stage IIS","Stage IISA","Stage IISB","Stage IIIE","Stage IIIEA","Stage IIIEB","Stage IIIES","Stage IIIESA","Stage IIIESB","Stage IIIS","Stage IIISA","Stage IIISB","Stage IAB","Stage A","Stage B","Stage C"]},"meta":{"dependsOn":"diagnosis.tumour_staging_system","notes":"This field is dependent on the selected tumour_staging_system","displayName":"Stage Group"}},"right":{"name":"clinical_stage_group","description":"Stage group of the tumour, as assigned by the reporting clinical_tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.)","valueType":"string","restrictions":{"codeList":["Stage 0","Stage 0a","Stage 0is","Stage I","Stage IA","Stage IA1","Stage IA2","Stage IA3","Stage IB","Stage IB1","Stage IB2","Stage IC","Stage IS","Stage IE","Stage II","Stage IIA","Stage IIA1","Stage IIA2","Stage IIE","Stage IIB","Stage IIC","Stage III","Stage IIIA","Stage IIIA1","Stage IIIA2","Stage IIIB","Stage IIIC","Stage IIIC1","Stage IIIC2","Stage IIID","Stage IV","Stage IVA","Stage IVA1","Stage IVA2","Stage IVB","Stage IVC","Occult carcinoma","Stage 1","Stage 1A","Stage 1B","Stage ISA","Stage ISB","Stage IEA","Stage IEB","Stage IIEA","Stage IIEB","Stage IIES","Stage IIESA","Stage IIESB","Stage IIS","Stage IISA","Stage IISB","Stage IIIE","Stage IIIEA","Stage IIIEB","Stage IIIES","Stage IIIESA","Stage IIIESB","Stage IIIS","Stage IIISA","Stage IIISB","Stage IAB","Stage A","Stage B","Stage C"],"script":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    if ($row.clinical_tumour_staging_system && $field) {\n      let codeList = [];\n      switch ($row.clinical_tumour_staging_system && $row.clinical_tumour_staging_system.trim().toLowerCase()) {\n        case 'revised international staging system (riss)':\n          codeList = [\n            'stage i',\n            'stage ii',\n            'stage iii'\n          ];\n          break;\n        case 'lugano staging system':\n          codeList = [\n             'stage i',\n             'stage ia',\n             'stage ib',\n             'stage ie',\n             'stage iea',\n             'stage ieb',\n             'stage ii',\n             'stage iia',\n             'stage iib',\n             'stage iie',\n             'stage iiea',\n             'stage iieb',\n             'stage iii',\n             'stage iiia',\n             'stage iiib',\n             'stage iv',\n             'stage iva',\n             'stage ivb'\n          ];\n          break;\n        case 'st jude staging system':\n          codeList = [\n            'stage i',\n            'stage ii',\n            'stage iii',\n            'stage iv'\n          ];\n          break;\n        case 'ann arbor staging system':\n          codeList = [\n            'stage i',\n            'stage ia',\n            'stage ib',\n            'stage ie',\n            'stage is',\n            'stage ii',\n            'stage iia',\n            'stage iib',\n            'stage iie',\n            'stage iis',\n            'stage iii',\n            'stage iiia',\n            'stage iiib',\n            'stage iiie',\n            'stage iiis',\n            'stage iv',\n            'stage iva',\n            'stage ivb',\n            'stage ive',\n            'stage ivs'\n          ];\n          break;\n        case 'rai staging system':\n          codeList = [\n             'stage 0',\n             'stage i',\n             'stage ii',\n             'stage iii',\n             'stage iv'\n          ];\n          break;\n        case 'durie-salmon staging system':\n          codeList = [\n            'stage 1',\n            'stage 1a',\n            'stage 1b',\n            'stage ii',\n            'stage iia',\n            'stage iib',\n            'stage iii',\n            'stage iiia',\n            'stage iiib'\n          ];\n          break;\n        case 'figo staging system':\n          codeList = [\n            'stage ia',\n            'stage ia1',\n            'stage ia2',\n            'stage ib',\n            'stage ib1',\n            'stage ib2',\n            'stage iia',\n            'stage iab',\n            'stage iiia',\n            'stage iiib',\n            'stage iva',\n            'stage ivb'\n          ];\n          break;\n        case 'binet staging system':\n          codeList = [\n             'stage a',\n             'stage b',\n             'stage c'\n         ];\n          break;\n        case 'ajcc 8th edition':\n          codeList = ['stage 0','stage 0a','stage 0is','stage i','stage ia','stage ia1','stage ia2','stage ia3','stage ib','stage ib1','stage ib2','stage ic','stage ie','stage is','stage ii','stage iia','stage iia1','stage iia2','stage iib','stage iic','stage iie','stage iii','stage iiia','stage iiia1','stage iiia2','stage iiib','stage iiic','stage iiic1','stage iiic2','stage iiid','stage iv','stage iva','stage iva1','stage iva2','stage ivb','stage ivc','occult carcinoma','stage 1'];\n          break;\n        case 'ajcc 7th edition':\n          codeList = ['stage 0','stage 0a','stage 0is','stage i','stage ia','stage ia1','stage ia2','stage ib','stage ib1','stage ib2','stage ic','stage is','stage ii','stage iia','stage iia1','stage iia2','stage iib','stage iic','stage iii','stage iiia','stage iiib','stage iiic','stage iiic1','stage iiic2','stage iv','stage iva','stage iva1','stage iva2','stage ivb','stage ivc','occult carcinoma','stage 1'\n];\n          break;\n        default:\n          codelist = [];\n      }\n\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'clinical_tumour_staging_system' is set to '${\n          $row.clinical_tumour_staging_system\n        }', 'clinical_stage_group' must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    return result;\n  })()"]},"meta":{"dependsOn":"diagnosis.tumour_staging_system","notes":"This field is dependent on the selected tumour_staging_system","displayName":"Stage Group"}},"diff":{"restrictions":{"script":{"type":"created","data":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    if ($row.clinical_tumour_staging_system && $field) {\n      let codeList = [];\n      switch ($row.clinical_tumour_staging_system && $row.clinical_tumour_staging_system.trim().toLowerCase()) {\n        case 'revised international staging system (riss)':\n          codeList = [\n            'stage i',\n            'stage ii',\n            'stage iii'\n          ];\n          break;\n        case 'lugano staging system':\n          codeList = [\n             'stage i',\n             'stage ia',\n             'stage ib',\n             'stage ie',\n             'stage iea',\n             'stage ieb',\n             'stage ii',\n             'stage iia',\n             'stage iib',\n             'stage iie',\n             'stage iiea',\n             'stage iieb',\n             'stage iii',\n             'stage iiia',\n             'stage iiib',\n             'stage iv',\n             'stage iva',\n             'stage ivb'\n          ];\n          break;\n        case 'st jude staging system':\n          codeList = [\n            'stage i',\n            'stage ii',\n            'stage iii',\n            'stage iv'\n          ];\n          break;\n        case 'ann arbor staging system':\n          codeList = [\n            'stage i',\n            'stage ia',\n            'stage ib',\n            'stage ie',\n            'stage is',\n            'stage ii',\n            'stage iia',\n            'stage iib',\n            'stage iie',\n            'stage iis',\n            'stage iii',\n            'stage iiia',\n            'stage iiib',\n            'stage iiie',\n            'stage iiis',\n            'stage iv',\n            'stage iva',\n            'stage ivb',\n            'stage ive',\n            'stage ivs'\n          ];\n          break;\n        case 'rai staging system':\n          codeList = [\n             'stage 0',\n             'stage i',\n             'stage ii',\n             'stage iii',\n             'stage iv'\n          ];\n          break;\n        case 'durie-salmon staging system':\n          codeList = [\n            'stage 1',\n            'stage 1a',\n            'stage 1b',\n            'stage ii',\n            'stage iia',\n            'stage iib',\n            'stage iii',\n            'stage iiia',\n            'stage iiib'\n          ];\n          break;\n        case 'figo staging system':\n          codeList = [\n            'stage ia',\n            'stage ia1',\n            'stage ia2',\n            'stage ib',\n            'stage ib1',\n            'stage ib2',\n            'stage iia',\n            'stage iab',\n            'stage iiia',\n            'stage iiib',\n            'stage iva',\n            'stage ivb'\n          ];\n          break;\n        case 'binet staging system':\n          codeList = [\n             'stage a',\n             'stage b',\n             'stage c'\n         ];\n          break;\n        case 'ajcc 8th edition':\n          codeList = ['stage 0','stage 0a','stage 0is','stage i','stage ia','stage ia1','stage ia2','stage ia3','stage ib','stage ib1','stage ib2','stage ic','stage ie','stage is','stage ii','stage iia','stage iia1','stage iia2','stage iib','stage iic','stage iie','stage iii','stage iiia','stage iiia1','stage iiia2','stage iiib','stage iiic','stage iiic1','stage iiic2','stage iiid','stage iv','stage iva','stage iva1','stage iva2','stage ivb','stage ivc','occult carcinoma','stage 1'];\n          break;\n        case 'ajcc 7th edition':\n          codeList = ['stage 0','stage 0a','stage 0is','stage i','stage ia','stage ia1','stage ia2','stage ib','stage ib1','stage ib2','stage ic','stage is','stage ii','stage iia','stage iia1','stage iia2','stage iib','stage iic','stage iii','stage iiia','stage iiib','stage iiic','stage iiic1','stage iiic2','stage iv','stage iva','stage iva1','stage iva2','stage ivb','stage ivc','occult carcinoma','stage 1'\n];\n          break;\n        default:\n          codelist = [];\n      }\n\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'clinical_tumour_staging_system' is set to '${\n          $row.clinical_tumour_staging_system\n        }', 'clinical_stage_group' must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    return result;\n  })()"]}}}}],["treatment.submitter_donor_id",{"left":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["treatment.submitter_treatment_id",{"left":{"name":"submitter_treatment_id","description":"Unique identifier of the treatment, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Treatment ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_treatment_id","description":"Unique identifier of the treatment, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Treatment ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["treatment.submitter_diagnosis_id",{"left":{"name":"submitter_diagnosis_id","valueType":"string","description":"Indicate the diagnosis event in the clinical timeline that this treatment was related to","meta":{"primaryId":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_diagnosis_id","valueType":"string","description":"Indicate the diagnosis event in the clinical timeline that this treatment was related to","meta":{"primaryId":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["follow_up.submitter_donor_id",{"left":{"description":"Unique identifier of the donor, assigned by the data provider","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"description":"Unique identifier of the donor, assigned by the data provider","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["follow_up.submitter_diagnosis_id",{"left":{"name":"submitter_diagnosis_id","valueType":"string","description":"Indicate the diagnosis event in the clinical timeline that this biospecimen acquisition was related to.","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_diagnosis_id","valueType":"string","description":"Indicate the diagnosis event in the clinical timeline that this biospecimen acquisition was related to.","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"Submitter Diagnosis ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["follow_up.submitter_follow_up_id",{"left":{"description":"Unique identifier for a follow-up event in a donor's clinical record, assigned by the data provider","name":"submitter_follow_up_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Follow-Up ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"description":"Unique identifier for a follow-up event in a donor's clinical record, assigned by the data provider","name":"submitter_follow_up_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Follow-Up ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["follow_up.relapse_interval",{"left":{"name":"relapse_interval","description":"Time interval between end of primary treatment and disease progression (in days)","valueType":"integer","meta":{"units":"days","dependsOn":"follow_up.disease_status_at_followup","notes":"If the donor was clinically disease free following primary treatment and then relapse or recurrence or progression (for liquid tumours) occurred afterwards, then this field will indicate the length of disease free interval, in days.","displayName":"Relapse Interval"}},"right":{"name":"relapse_interval","description":"Time interval between end of primary treatment and disease progression (in days)","valueType":"integer","restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n        const intervalOfFollowup = parseInt($row.interval_of_followup);\n\n        const stateOfProgression = (entry) => {return /(progression)$/.test(decodeURI(entry))}; \n        const relapseOrRecurrence = diseaseStatus === \"relapse or recurrence\";\n   \n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n\n        if ((!$field || checkforEmpty($field)) && (stateOfProgression(diseaseStatus) || relapseOrRecurrence)) {\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is set a state of progression, relapse, or recurrence.` }\n        }\n        else if (!(!$field || checkforEmpty($field)) && !stateOfProgression(diseaseStatus) && !relapseOrRecurrence) {\n            result = {valid: false, message: `'${$name}' cannot be provided if 'disease_status_at_followup' is not a state of progression, relapse, or recurrence.` }\n        }\n        else if (!(checkforEmpty($field)) && (stateOfProgression(diseaseStatus) || relapseOrRecurrence)) {\n            relapseInterval = parseInt($field);\n            if (relapseInterval > intervalOfFollowup) {\n                result = {valid: false, message: `'${$name}' cannot be greater than the 'interval_of_followup'.` }\n            }\n        }\n        return  result;\n    })()"]},"meta":{"units":"days","dependsOn":"follow_up.disease_status_at_followup","notes":"If the donor was clinically disease free following primary treatment and then relapse or recurrence or progression (for liquid tumours) occurred afterwards, then this field will indicate the length of disease free interval, in days.","displayName":"Relapse Interval"}},"diff":{"restrictions":{"type":"created","data":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n        const intervalOfFollowup = parseInt($row.interval_of_followup);\n\n        const stateOfProgression = (entry) => {return /(progression)$/.test(decodeURI(entry))}; \n        const relapseOrRecurrence = diseaseStatus === \"relapse or recurrence\";\n   \n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n\n        if ((!$field || checkforEmpty($field)) && (stateOfProgression(diseaseStatus) || relapseOrRecurrence)) {\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is set a state of progression, relapse, or recurrence.` }\n        }\n        else if (!(!$field || checkforEmpty($field)) && !stateOfProgression(diseaseStatus) && !relapseOrRecurrence) {\n            result = {valid: false, message: `'${$name}' cannot be provided if 'disease_status_at_followup' is not a state of progression, relapse, or recurrence.` }\n        }\n        else if (!(checkforEmpty($field)) && (stateOfProgression(diseaseStatus) || relapseOrRecurrence)) {\n            relapseInterval = parseInt($field);\n            if (relapseInterval > intervalOfFollowup) {\n                result = {valid: false, message: `'${$name}' cannot be greater than the 'interval_of_followup'.` }\n            }\n        }\n        return  result;\n    })()"]}}}}],["exposure.submitter_donor_id",{"left":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["exposure.smoking_pack_years",{"left":{"name":"smoking_pack_years","description":"Number of packs of cigarettes per day multiplied by the number of years donor smoked","valueType":"string","meta":{"dependsOn":"exposure.smoking_status","notes":"Not required if smoking history is unknown or if the donor never smoked. Pack-years is calculated by multiplying the number of packs of cigarettes (20 cigarettes per pack) smoked per day by the number of years the person has smoked. For example, 1 pack year is equal to smoking 1 pack per day for 1 year","displayName":"smoking_pack_years"}},"right":{"name":"smoking_pack_years","description":"Number of packs of cigarettes per day multiplied by the number of years donor smoked","valueType":"string","meta":{"dependsOn":"exposure.smoking_status","notes":"Pack-years is calculated by multiplying the number of packs of cigarettes (20 cigarettes per pack) smoked per day by the number of years the person has smoked. For example, 1 pack year is equal to smoking 1 pack per day for 1 year","displayName":"smoking_pack_years"}},"diff":{"meta":{"notes":{"type":"updated","data":"Pack-years is calculated by multiplying the number of packs of cigarettes (20 cigarettes per pack) smoked per day by the number of years the person has smoked. For example, 1 pack year is equal to smoking 1 pack per day for 1 year"}}}}],["exposure.alcohol_status",{"left":{"name":"alcohol_status","description":"Current alcohol consumtion based on recommended daily limit","valueType":"string","restrictions":{"codeList":["No alcohol consumption","Alcohol intake within recommended daily limit","Alcohol intake exceeds recommended daily limit","Alcohol consumption unknown"]},"meta":{"notes":"Refer to the Canadian Centre on Substance Abuse, for men, no more than 15 drinks a week, with no more than 3 drinks a day most days. No more than 4 drinks on any single occasion. For women, no more than 10 drinks a week, with no more than 2 drinks a day most days. No more than 3 drinks on any single occasion.","displayName":"Alcohol status"}},"right":{"name":"alcohol_status","description":"Alcohol consumtion based on recommended daily limit","valueType":"string","restrictions":{"codeList":["No alcohol consumtion","Alcohol intake within recommended daily limit","Alcohol intake exceeds recommended daily limit","Alcohol consumption unknown"]},"meta":{"notes":"Refer to the Canadian Centre on Substance Abuse, for men, no more than 15 drinks a week, with no more than 3 drinks a day most days. No more than 4 drinks on any single occasion. For women, no more than 10 drinks a week, with no more than 2 drinks a day most days. No more than 3 drinks on any single occasion.","displayName":"Alcohol status"}},"diff":{"description":{"type":"updated","data":"Alcohol consumtion based on recommended daily limit"},"restrictions":{"codeList":{"type":"updated","data":{"added":["No alcohol consumtion"],"deleted":["No alcohol consumption"]}}}}}],["phenotype.submitter_donor_id",{"left":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["phenotype.submitter_phenotype_id",{"left":{"name":"submitter_phenotype_id","description":"Unique identifier of the phenotype, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Phenotype ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"name":"submitter_phenotype_id","description":"Unique identifier of the phenotype, assigned by the data provider","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Phenotype ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["family_relationship.submitter_donor_id_1",{"left":{"description":"Unique identifier of the donor 1, assigned by the data provider","name":"submitter_donor_id_1","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Donor 1 ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"description":"Unique identifier of the donor 1, assigned by the data provider","name":"submitter_donor_id_1","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Donor 1 ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["family_relationship.submitter_donor_id_2",{"left":{"description":"Unique identifier of the donor 2, assigned by the data provider","name":"submitter_donor_id_2","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Donor 2 ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"description":"Unique identifier of the donor 2, assigned by the data provider","name":"submitter_donor_id_2","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Donor 2 ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["family_relationship.family_type",{"left":{"name":"family_type","description":"Type of family-based study design","valueType":"string","restrictions":{"required":true,"codeList":["Case-parent trio","Case-sibling","Twins","Case - affected relative","Other"]},"meta":{"core":true,"displayName":"Family Type"}},"diff":{"type":"deleted","data":{"name":"family_type","description":"Type of family-based study design","valueType":"string","restrictions":{"required":true,"codeList":["Case-parent trio","Case-sibling","Twins","Case - affected relative","Other"]},"meta":{"core":true,"displayName":"Family Type"}}}}],["family_history.submitter_donor_id",{"left":{"description":"Unique identifier of the donor, assigned by the data provider","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the CQDG ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"right":{"description":"Unique identifier of the donor, assigned by the data provider","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"donor.submitter_donor_id","displayName":"Submitter Donor ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"notes":{"type":"updated","data":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."}}}}],["donor.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}],["biospecimen.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}],["biospecimen.submitter_sample_id",{"right":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the molecular sample, assigned by the data provider","meta":{"primaryId":true,"validationDependency":true,"displayName":"Submitter Sample ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the molecular sample, assigned by the data provider","meta":{"primaryId":true,"validationDependency":true,"displayName":"Submitter Sample ID","notes":"To prevent data collisions, submitter_id cannot begin with any of the ARGO ID prefixes.  The restricted prefixes include: `DO`, `SP`, `SA`,`TR`,`FU`, `PD`."},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["biospecimen.sample_type",{"right":{"description":"Type of molecular sample used for analysis testing","name":"sample_type","valueType":"string","restrictions":{"required":true,"codeList":["Amplified DNA","ctDNA","Other DNA enrichments","Other RNA fractions","polyA+ RNA","Ribo-Zero RNA","Total DNA","Total RNA","Other"]},"meta":{"core":true,"displayName":"Sample type"}},"diff":{"type":"created","data":{"description":"Type of molecular sample used for analysis testing","name":"sample_type","valueType":"string","restrictions":{"required":true,"codeList":["Amplified DNA","ctDNA","Other DNA enrichments","Other RNA fractions","polyA+ RNA","Ribo-Zero RNA","Total DNA","Total RNA","Other"]},"meta":{"core":true,"displayName":"Sample type"}}}}],["Diagnosis.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}],["treatment.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"foreignKey":"study.study_id","primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"foreignKey":"study.study_id","primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["follow_up.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}],["exposure.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}],["exposure.alcohol_consumption_duration",{"right":{"name":"alcohol_consumption_duration","description":"Indicate the duration, in years, that the donor has consumed alcohol","valueType":"integer","meta":{"displayName":"Alcolohol Consumption Duration"}},"diff":{"type":"created","data":{"name":"alcohol_consumption_duration","description":"Indicate the duration, in years, that the donor has consumed alcohol","valueType":"integer","meta":{"displayName":"Alcolohol Consumption Duration"}}}}],["phenotype.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"foreignKey":"study.study_id","primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"foreignKey":"study.study_id","primaryId":true,"displayName":"Study ID"},"restrictions":{"required":true}}}}],["family.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}],["family.submitter_family_id",{"right":{"name":"submitter_family_id","valueType":"string","description":"Unique identifier of the family, assigned by the data provider","restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"},"meta":{"displayName":"Submitter Family ID","validationDependency":true,"primaryId":true}},"diff":{"type":"created","data":{"name":"submitter_family_id","valueType":"string","description":"Unique identifier of the family, assigned by the data provider","restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"},"meta":{"displayName":"Submitter Family ID","validationDependency":true,"primaryId":true}}}}],["family.family_type",{"right":{"name":"family_type","description":"Type of family-based study design","valueType":"string","restrictions":{"required":true,"codeList":["Case-parent trio","Case-sibling","Twins","Case - affected relative","Other"]},"meta":{"core":true,"displayName":"Family Type"}},"diff":{"type":"created","data":{"name":"family_type","description":"Type of family-based study design","valueType":"string","restrictions":{"required":true,"codeList":["Case-parent trio","Case-sibling","Twins","Case - affected relative","Other"]},"meta":{"core":true,"displayName":"Family Type"}}}}],["family_relationship.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}],["family_history.study_id",{"right":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"study_id","valueType":"string","description":"Unique identifier for the Study","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"Study ID"},"restrictions":{"required":true}}}}]]