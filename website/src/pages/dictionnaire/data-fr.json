{"dictionary":{"schemas":[{"name":"sample_registration","description":"L'ensemble des champs requis pour inscrire vos échantillons dans le CQDG. Il est nécessaire de procéder à l''inscription de vos échantillons avant de soumettre des données cliniques et fichiers de données moléculaires.","fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"study.study_id","displayName":"ID de l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_participant_id","description":"Identifiant pour le participant soumis par l'étude.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_biospecimen_id","description":"Identifiant pour le spécimen biologique soumis par l'étude.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID du spécimen biologique soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_sample_id","valueType":"string","description":"Identifiant unique pour l'échantillon moléculaire soumis par l'étude","meta":{"primaryId":true,"validationDependency":true,"displayName":"ID de l'échantillon moléculaire soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"description":"Type d'échantillon moléculaire utilisé pour l'analyse","name":"sample_type","valueType":"string","restrictions":{"required":true,"codeList":["NCIT:C449","NCIT:C812"]},"meta":{"core":true,"displayName":"Type d'échantillon","notes":"Les codes sont tirés du NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl DNA (NCIT:C449), Ribonucleic Acid (NCIT:C812)"}}]},{"name":"study","description":"Ensemble de champs reliés à l'étude contribuant des données au CQDG","fields":[{"name":"study_id","valueType":"string","description":"Identifant unique pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"name","valueType":"string","description":"Nom de l'étude","restrictions":{"required":true},"meta":{"core":true,"displayName":"Nom de l'étude"}},{"name":"description","valueType":"string","description":"Brève description de l'étude","restrictions":{"required":true},"meta":{"core":true,"displayName":"Description de l'étude"}},{"name":"keyword","valueType":"string","description":"Mots-clés associés à l'étude","meta":{"displayName":"Mots-clés associés à l'étude","notes":"Liste de mots-clés délimitée avec des points-virgules (;)"}},{"name":"access_authority","valueType":"string","description":"Contact du responsable de l'accès","meta":{"displayName":"Responsable de l'accès","notes":"Veuillez fournir le site Web ou courriel du responsable de l'accès"}},{"name":"domain","description":"Domaine de recherche de l'étude","valueType":"string","restrictions":{"required":true,"codeList":["Aging","Birth Defects","Cancer","Circulatory and Respiratory Health","General Health","Infection and Immunity","Musculoskeletal Health and Arthritis","Neurodevelopmental Conditions","Neurosciences, Mental Health and Addiction","Nutrition, Metabolism and Diabetes","Population Genomics","Rare Diseases","Not Applicable","Other"]},"meta":{"core":true,"displayName":"Domaine de recherche de l'étude"}},{"name":"population","description":"Population cible de l'étude","valueType":"string","restrictions":{"required":true,"codeList":["Pediatric","Adult","Pediatric and adult"]},"meta":{"core":true,"displayName":"Population cible de l'étude"}},{"name":"access_limitations","description":"Restrictions pour l'accès telles que définies dans l'ontologie DUO de GA4GH","valueType":"string","restrictions":{"required":true,"codeList":["DUO:0000004","DUO:0000006","DUO:0000007","DUO:0000011","DUO:0000042"]},"meta":{"core":true,"displayName":"Restrictions pour l'accès","notes":"Référez-vous au Data Use Ontology https://github.com/EBISPOT/DUO"}},{"name":"access_requirements","description":"Conditions d'utilisation telles que définies dans l'ontologie DUO de GA4GH","valueType":"string","restrictions":{"required":true,"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const list = [\n            \"DUO:0000012\",\n            \"DUO:0000015\",\n            \"DUO:0000016\",\n            \"DUO:0000018\",\n            \"DUO:0000019\",\n            \"DUO:0000020\",\n            \"DUO:0000021\",\n            \"DUO:0000022\",\n            \"DUO:0000025\",\n            \"DUO:0000026\",\n            \"DUO:0000027\",\n            \"DUO:0000028\",\n            \"DUO:0000029\",\n            \"DUO:0000043\",\n            \"DUO:0000044\",\n            \"DUO:0000045\",\n            \"DUO:0000046\",\n            \"Biospecimen Access\"\n          ];\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = $field.trim().replace(/\\s/g, '');\n        const currValues = currField.split(';');\n        let valid = true;\n        currValues.forEach((value) => {\n            if (value && !list.includes(value)) {\n                valid = false;\n            }\n        })\n\n        if (!valid) {\n            result = {\n                valid: false,\n                message: `${$name} must contain a list of these codes: ${list.join(';')} separated by semicolon (;)`\n            }\n        }\n\n        return result;\n    })"],"codeList":["DUO:0000012","DUO:0000015","DUO:0000016","DUO:0000018","DUO:0000019","DUO:0000020","DUO:0000021","DUO:0000022","DUO:0000025","DUO:0000026","DUO:0000027","DUO:0000028","DUO:0000029","DUO:0000043","DUO:0000044","DUO:0000045","DUO:0000046","Biospecimen Access"]},"meta":{"core":true,"displayName":"Conditions d'utilisation","notes":"Référez-vous aux codes du Data Use Ontology pour obtenir la définition des codes https://github.com/EBISPOT/DUO","examples":"DUO:0000021;DUO:0000025"}}]},{"name":"participant","description":"Ensemble de champs reliés aux caractéristiques des participants dans le CQDG.","fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"description":"Identifiant unique pour le participant soumis par l'étude","name":"submitter_participant_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"description":"Âge (en jours) du participant au moment du recrutement","name":"age_at_recruitment","valueType":"number","meta":{"core":true,"displayName":"Âge (en jours) au recrutement","units":"days"},"restrictions":{"range":{"min":0,"max":40000},"required":false}},{"description":"Genre du participant","name":"genre","valueType":"string","restrictions":{"required":true,"codeList":["Male","Female","Other","Unknown"]},"meta":{"core":true,"notes":"Information obtenue des données médico-administratives ou déclarée par le participant","displayName":"Genre"}},{"description":"Identité éthnique du participant","name":"ethnicity","valueType":"string","restrictions":{"codeList":["French Canadian","English Canadian","First Nation, Inuit, Metis","European","Arab","Latin American","African or Caribbean","East and Southeast Asian","South Asian","Mixed","Other"]},"meta":{"displayName":"Ethnicité","notes":"Les Canadiens français désignent les Canadiens dont les ancêtres font partie des colons français venus s'installer au Canada. Les Canadiens anglais désignent les Canadiens anglophones d'ascendance et de culture anglaise."}},{"description":"Statut vital du participant","name":"vital_status","restrictions":{"codeList":["Alive","Deceased","Unknown"],"required":true},"valueType":"string","meta":{"validationDependency":true,"core":true,"displayName":"Statut vital"}},{"description":"Cause du décès","name":"cause_of_death","restrictions":{"codeList":["Cancer","Heart disease","Cerebrovascular disease","Accidental death","Chronic lower respiratory diseases","Influenza and pneumonia","Other reason","Unknown"],"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const vitalStatus = $row.vital_status || '';\n\n        if ($field && vitalStatus && vitalStatus.trim().toLowerCase() !== 'deceased') {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided if the participant's vital_status is not Deceased.`,\n            };\n        }\n        return result;\n    })"]},"valueType":"string","meta":{"core":true,"dependsOn":"participant.vital_status","notes":"Requis si le participant est décédé","displayName":"Cause du décès"}},{"description":"Âge du participant (en jours) au moment de son décès","name":"age_of_death","valueType":"number","meta":{"dependsOn":"participant.vital_status","notes":"Requis si le participant est décédé.","validationDependency":true,"units":"days","core":true,"displayName":"Âge (en jours) du décès"},"restrictions":{"range":{"min":0,"max":40000},"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        let result = {valid: true, message: 'Ok'};\n        const vitalStatus = $row.vital_status || '';\n\n        if ($field && vitalStatus && vitalStatus.trim().toLowerCase() !== 'deceased') {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided if the participant's vital_status is not Deceased.`,\n            };\n        }\n        return result;\n    })"]}}]},{"name":"biospecimen","description":"Ensemble de champs reliés au spécimen biologique du participant. Un spécimen biologique est tout type d'échantillon biologique collecté pour analyse, pour des fins de diagnostic ou pour la recherche. Pour soumettre plus d'un spécimen biologique pour un participant, veuillez ajouter des lignes dans la table biospecimen pour ce participant.","fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_participant_id","description":"Identifiant pour le participant soumis par l'étude","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_biospecimen_id","description":"Identifiant unique pour le spécimen biologique soumis par l'étude","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID du spécimen biologique soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"description":"Âge du participant (en jours) au moment de la collecte du spécimen biologique","name":"age_biospecimen_collection","restrictions":{"range":{"min":0,"max":40000}},"valueType":"number","meta":{"units":"days","displayName":"Âge (en jours) au moment de la collecte du spécimen biologique"}},{"description":"Source tissulaire du spécimen biologique","name":"biospecimen_tissue_source","valueType":"string","restrictions":{"required":true,"codeList":["NCIT:C12434","NCIT:C13275","NCIT:C164014","NCIT:C12431"]},"meta":{"core":true,"notes":"Les codes sont tirés du NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl Blood (NCIT:C12434), Saliva (NCIT:C13275), Solid Tissue Sample (NCIT:C164014), Bone Marrow (NCIT:C12431)","displayName":"Source tissulaire du spécimen biologique"}},{"name":"tumor_normal_designation","valueType":"string","description":"Le spécimen biologique provient d'un tissu tumoral ou normal","restrictions":{"required":true,"codeList":["Normal","Tumor","Not applicable"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tissu normal ou tumoral","notes":"Indiquez `Not applicable' si le spécimen biologique n'a pas été analysé."}},{"name":"cancer_biospecimen_type","valueType":"string","description":"Description du type de tissu d'où provient le spécimen biologique (spécifique au cancer), basé sur le  NCI Thesaurus (NCIt)","restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"],"codeList":["NCIT:C156445","NCIT:156440","NCIT:156441","NCIT:164032","NCIT:C18009","NCIT:C162623","NCIT:C156443"]},"meta":{"validationDependency":true,"core":true,"displayName":"Type de spécimen biologique (spécifique au cancer)","notes":"Les codes sont tirés du NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl Derived Cell Line (NCIT:C156445), Metastatic Tumor Sample (NCIT:156440), Sample Derived from New Primary (NCIT:156441), Tumor-Adjacent Normal Specimen (NCIT:164032), Tumor Tissue (NCIT:C18009), Normal Tissue Segment (NCIT:C162623), Cell Line-Derived Xenograft (NCIT:C156443)"}},{"name":"cancer_biospecimen_anatomic_location_source_text","valueType":"string","description":"Site anatomique d'où le spécimen biologique a été collecté (spécifique) au cancer","restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"]},"meta":{"validationDependency":true,"core":true,"notes":"Utilisez le terme inscrit au moment de la collecte du spécimen biologique","displayName":"Localisation anatomique du spécimen biologique (terme)","examples":"Breast"}},{"name":"biospecimen_anatomic_location_ncit_code","valueType":"string","description":"Indiquer le code NCIT représentant la localisation anatomique du spécimen biologique","restrictions":{"regex":"^ncit:C\\d+$","script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"]},"meta":{"validationDependency":true,"core":true,"notes":"Référez-vous au NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl","displayName":"Localisation anatomique du spécimen biologique (code)","examples":"NCIT:C12971"}},{"name":"tumor_histological_type_source_text","description":"Histologie du néoplasme, selon le rapport de pathologie","valueType":"string","meta":{"validationDependency":true,"core":true,"dependsOn":"sample_registration.tumor_normal_designation","notes":"Si le spécimen biologique est une tumeur, veuillez utiliser le terme fourni dans le rapport de pathologie","valueType":"string","examples":"Mucinous Adenocarcinoma","displayName":"Type histologique de la tumeur"},"restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"]}},{"name":"tumor_histological_type_ncit_code","description":"Code histologique du néoplasme selon le NCI Thesaurus (NCIt)","valueType":"string","meta":{"validationDependency":true,"core":true,"dependsOn":"biospecimen.tumor_normal_designation","notes":"Si le spécimen biologique est une tumeur, référez-vous au NCI Thesaurus (NCIt) http://purl.obolibrary.org/obo/ncit.owl","valueType":"string","examples":"NCIT:C136709","displayName":"Tumor Histological Type"},"restrictions":{"regex":"^ncit:C\\d+$","script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorNormalDesignation = $row.tumor_normal_designation || '';\n        const tumorNormalDesignationLowered = tumorNormalDesignation.trim().toLowerCase();\n\n        if (!currField && (tumorNormalDesignationLowered === 'tumor' || tumorNormalDesignationLowered === 'normal')) {\n            return {\n                valid: false,\n                message: `${$name} must be provided when the biospecimen's tumor_normal_designation is Tumor or Normal.`,\n            };\n        }\n\n        return { valid: true, message: 'Ok' };\n    })"]}}]},{"name":"Diagnosis","description":"Ensemble de champs reliés aux diagnostics du participant. Pour soumettre plus d'un diagnostic pour un participant, veuillez ajouter des lignes dans la table diagnostic pour ce participant.","meta":{"parent":"participant"},"fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_participant_id","valueType":"string","description":"Identifiant pour le participant soumis par l'étude","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"Submitter participant ID","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"diagnosis_source_text","valueType":"string","description":"Le diagnostic du participant tel que rapporté par l'étude","restrictions":{"required":true},"meta":{"core":true,"examples":"cancer du sein, AVC","notes":"Veuillez fournir l'information telle qu'elle est rapportée dans l'étude","displayName":"Terme diagnostique rapporté dans l'étude"}},{"name":"diagnosis_ICD_code","valueType":"string","description":"Code utilisé pour définir la maladie selon la CIM-10","restrictions":{"regex":"^[A-TV-Z][0-9][0-9AB].?[0-9A-TV-Z]{0,4}$","script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n        if(!$field){\n            if ($name === 'diagnosis_ICD_code' && !$row.diagnosis_mondo_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_mondo_code does not exist.`,\n                };\n            } else if ($name === 'diagnosis_mondo_code' && !$row.diagnosis_ICD_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_ICD_code does not exist.`,\n                };\n            }\n        }\n\n        return result;\n    })"]},"meta":{"examples":"C41.1, C16.9","notes":"Fournissez le code exact tel qu'il apparait dans la 10e révision de la Classification statistique internationale des maladies et des problèmes de santé connexes (version canadienne) https://apps.who.int/classifications/apps/icd/ClassificationDownload/DLArea/Download.aspxWrite","displayName":"Code CIM-10"}},{"name":"diagnosis_mondo_code","valueType":"string","description":"Code utilisé pour définir la maladie selon la classification MONDO","restrictions":{"regex":"^(MONDO:)[0-9]{7}$","script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n        if(!$field){\n            if ($name === 'diagnosis_ICD_code' && !$row.diagnosis_mondo_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_mondo_code does not exist.`,\n                };\n            } else if ($name === 'diagnosis_mondo_code' && !$row.diagnosis_ICD_code) {\n                result = {\n                    valid: false,\n                    message: `${$name} must be provided when the diagnosis' diagnosis_ICD_code does not exist.`,\n                };\n            }\n        }\n\n        return result;\n    })"]},"meta":{"examples":"MONDO_0002131, MONDO_0001056","notes":"Fournissez le code tel qu'il apparait dans MONDO. Consultez les codes MONDO  https://www.ebi.ac.uk/ols/ontologies/mondo","displayName":"Code MONDO"}},{"name":"age_at_diagnosis","valueType":"number","description":"Âge du participant (en jours) au moment du diagnostic de la condition","restrictions":{"range":{"min":0,"max":40000}},"meta":{"units":"days","core":true,"displayName":"Âge (en jours) au diagnostic"}},{"name":"is_cancer","description":"Indiquer si le diagnostic est un diagnostic de cancer","restrictions":{"required":true},"valueType":"boolean","meta":{"core":true,"displayName":"Est un diagnostic de cancer"}},{"name":"is_cancer_primary","description":"Indiquer si le diagnostic est un diagnostic de cancer primaire","valueType":"string","restrictions":{"codeList":["Yes","No","Unknown"]},"meta":{"dependsOn":"diagnosis.is_cancer","notes":"Cette information est requise si le diagnostic est un diagnostic de cancer","core":true,"displayName":"Est un cancer primaire"}},{"name":"tumor_staging_system","valueType":"string","description":"Indiquer le système de stadification du cancer utilisé pour effectué le diagnostic primaire","restrictions":{"codeList":["AJCC 8th edition","AJCC 7th edition","Ann Arbor staging system","Binet staging system","Durie-Salmon staging system","FIGO staging system","Lugano staging system","Rai staging system","Revised International staging system (RISS)","St Jude staging system"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if (!currField && isCancer) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the diagnosis' is_cancer flag is 1/true.`,\n            };\n        }\n        return result;\n    })"]},"meta":{"dependsOn":"diagnosis.is_cancer","core":true,"displayName":"Système de stadification"}},{"name":"stage_group","description":"Stade de la tumeur assigné par le sytème de gradation et indiquant le pronostic (stade I, II, III etc.).","valueType":"string","restrictions":{"codeList":["Stage 0","Stage 0a","Stage 0is","Stage I","Stage IA","Stage IA1","Stage IA2","Stage IA3","Stage IB","Stage IB1","Stage IB2","Stage IC","Stage IS","Stage IE","Stage II","Stage IIA","Stage IIA1","Stage IIA2","Stage IIE","Stage IIB","Stage IIC","Stage III","Stage IIIA","Stage IIIA1","Stage IIIA2","Stage IIIB","Stage IIIC","Stage IIIC1","Stage IIIC2","Stage IIID","Stage IV","Stage IVA","Stage IVA1","Stage IVA2","Stage IVB","Stage IVC","Occult carcinoma","Stage 1","Stage 1A","Stage 1B","Stage ISA","Stage ISB","Stage IEA","Stage IEB","Stage IIEA","Stage IIEB","Stage IIES","Stage IIESA","Stage IIESB","Stage IIS","Stage IISA","Stage IISB","Stage IIIE","Stage IIIEA","Stage IIIEB","Stage IIIES","Stage IIIESA","Stage IIIESB","Stage IIIS","Stage IIISA","Stage IIISB","Stage IAB","Stage A","Stage B","Stage C"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const isCancer = $row.is_cancer && $row.is_cancer.trim().toLowerCase() == \"true\";\n\n        if ($field && !$row.tumor_staging_system) {\n            result = {\n                valid: false,\n                message: `Please provide a value for the tumor_staging_system or leave stage_group blank`,\n            };\n        }\n\n        if (isCancer && !$field) {\n            result = {\n                valid: false,\n                message: `The stage_group mandatory if the is_cancer flag is set to 1/true`,\n            };\n        }\n\n        if ($field) {\n            let codeList = [];\n            switch ($row.tumor_staging_system && $row.tumor_staging_system.trim().toLowerCase()) {\n                case 'revised international staging system (riss)':\n                    codeList = ['stage i', 'stage ii', 'stage iii'];\n                    break;\n                case 'lugano staging system':\n                    codeList = [\n                        'stage i',\n                        'stage ia',\n                        'stage ib',\n                        'stage ie',\n                        'stage iea',\n                        'stage ieb',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iie',\n                        'stage iiea',\n                        'stage iieb',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iv',\n                        'stage iva',\n                        'stage ivb',\n                    ];\n                    break;\n                case 'st jude staging system':\n                    codeList = ['stage i', 'stage ii', 'stage iii', 'stage iv'];\n                    break;\n                case 'ann arbor staging system':\n                    codeList = [\n                        'stage i',\n                        'stage ia',\n                        'stage ib',\n                        'stage ie',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iie',\n                        'stage iis',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iiie',\n                        'stage iiis',\n                        'stage iv',\n                        'stage iva',\n                        'stage ivb',\n                        'stage ive',\n                        'stage ivs',\n                    ];\n                    break;\n                case 'rai staging system':\n                    codeList = ['stage 0', 'stage i', 'stage ii', 'stage iii', 'stage iv'];\n                    break;\n                case 'durie-salmon staging system':\n                    codeList = [\n                        'stage 1',\n                        'stage 1a',\n                        'stage 1b',\n                        'stage ii',\n                        'stage iia',\n                        'stage iib',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                    ];\n                    break;\n                case 'figo staging system':\n                    codeList = [\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage iia',\n                        'stage iab',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iva',\n                        'stage ivb',\n                    ];\n                    break;\n                case 'binet staging system':\n                    codeList = ['stage a', 'stage b', 'stage c'];\n                    break;\n                case 'ajcc 8th edition':\n                    codeList = [\n                        'stage 0',\n                        'stage 0a',\n                        'stage 0is',\n                        'stage i',\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ia3',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage ic',\n                        'stage ie',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iia1',\n                        'stage iia2',\n                        'stage iib',\n                        'stage iic',\n                        'stage iie',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiia1',\n                        'stage iiia2',\n                        'stage iiib',\n                        'stage iiic',\n                        'stage iiic1',\n                        'stage iiic2',\n                        'stage iiid',\n                        'stage iv',\n                        'stage iva',\n                        'stage iva1',\n                        'stage iva2',\n                        'stage ivb',\n                        'stage ivc',\n                        'occult carcinoma',\n                        'stage 1',\n                    ];\n                    break;\n                case 'ajcc 7th edition':\n                    codeList = [\n                        'stage 0',\n                        'stage 0a',\n                        'stage 0is',\n                        'stage i',\n                        'stage ia',\n                        'stage ia1',\n                        'stage ia2',\n                        'stage ib',\n                        'stage ib1',\n                        'stage ib2',\n                        'stage ic',\n                        'stage is',\n                        'stage ii',\n                        'stage iia',\n                        'stage iia1',\n                        'stage iia2',\n                        'stage iib',\n                        'stage iic',\n                        'stage iii',\n                        'stage iiia',\n                        'stage iiib',\n                        'stage iiic',\n                        'stage iiic1',\n                        'stage iiic2',\n                        'stage iv',\n                        'stage iva',\n                        'stage iva1',\n                        'stage iva2',\n                        'stage ivb',\n                        'stage ivc',\n                        'occult carcinoma',\n                        'stage 1',\n                    ];\n                    break;\n                default:\n                    codelist = [];\n            }\n\n            if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n                const msg = `'${$field}' is not a permissible value. When 'tumor_staging_system' is set to '${\n                    $row.tumor_staging_system\n                }', 'stage_group' must be one of the following: \\n${codeList\n                    .map((code) => `- \"${code}\"`)\n                    .join('\\n')}`;\n\n                result.valid = false;\n                result.message = msg;\n            }\n        }\n        return result;\n    })"]},"meta":{"dependsOn":"diagnosis.tumor_staging_system","notes":"Ce champs dépend du système de stadification","displayName":"Stade clinic de la tumeur"}},{"name":"t_category","description":"Classification t (tumeur), selon le système de classification des tumeurs cancéreuses solides de l'Union internationale contre le cancer (UICC). La tumeur primitive est définie en fonction de sa taille et de son extension aux tissus avoisinants au moment du diagnostic et est classée de T0 à T4.","valueType":"string","meta":{"dependsOn":"diagnosis.tumor_staging_system","notes":"Ce champs est requis si le système de stadification est une des éditions du manuel AJCC.","displayName":"Classification t"},"restrictions":{"codeList":["T0","T1","T1a","T1a1","T1a2","T1b","T1b1","T1b2","T1c","T1d","T1mi","T2","T2a","T2a1","T2a2","T2b","T2c","T2d","T3","T3a","T3b","T3c","T3d","T3e","T4","T4a","T4b","T4c","T4d","T4e","Ta","Tis","Tis(DCIS)","Tis(LAMN)","Tis(LCIS)","Tis(Paget)","Tis(Paget’s)","Tis pd","Tis pu","TX"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"]}},{"name":"n_category","description":"Classification n (nodes = ganglions) selon le système de classification des tumeurs cancéreuses solides de l'Union internationale contre le cancer (UICC). Les ganglions sont classés en fonction de leur nombre, de la taille et de leur extension locale. Ils sont classés de N0 à N3.","valueType":"string","meta":{"dependsOn":"diagnosis.tumor_staging_system","notes":"Ce champs est requis si le système de stadification est une des éditions du manuel AJCC.","displayName":"Classification n"},"restrictions":{"codeList":["N0","N0a","N0a (biopsy)","N0b","N0b (no biopsy)","N0(i+)","N0(i-)","N0(mol+)","N0(mol-)","N1","N1a","N1a(sn)","N1b","N1c","N1mi","N2","N2a","N2b","N2c","N2mi","N3","N3a","N3b","N3c","N4","NX"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"]}},{"name":"m_category","description":"Catégorie m (métastase) selon le système de stadification des tumeurs cancéreuses solides de l'Union internationale contre le cancer (UICC). Les métastases sont classées en fonction de leur absence ou de leur présence au moment du diagnosticet avant le traitement, et se classent de M0 à M1.","valueType":"string","meta":{"dependsOn":"diagnosis.tumor_staging_system","notes":"Ce champs est requis si le système de stadification est une des éditions du manuel AJCC.","displayName":"Classification m"},"restrictions":{"codeList":["M0","M0(i+)","M1","M1a","M1a(0)","M1a(1)","M1b","M1b(0)","M1b(1)","M1c","M1c(0)","M1c(1)","M1d","M1d(0)","M1d(1)","M1e"],"script":["(function validate(inputs) {\n        let result = {valid: true, message: 'Ok'};\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return result;\n        }\n\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const tumorStagingSystem = $row.tumor_staging_system || '';\n\n        if (!currField && tumorStagingSystem && /^(AJCC)\\b/i.test(tumorStagingSystem.trim())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the tumor_staging_system is AJCC.`,\n            };\n        } else if (currField && !/^(AJCC)\\b/i.test($field)) {\n            result = {\n                valid: false,\n                message: `${$name} cannot be provided when the tumor_staging_system is not AJCC.`,\n            };\n        }\n        return result;\n    })"]}}]},{"name":"treatment","description":"L'ensemble de champs reliés au traitement d'un participant. Pour soumettre plus d'un traitement pour un participant, veuillez ajouter des lignes dans la table traitement pour ce participant.","meta":{"parent":"participant"},"fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_participant_id","description":"Identifiant pour le participant soumis par l'étude","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_diagnosis_id","valueType":"string","description":"Identifiant du diagnostic qui est relié à ce traitement","meta":{"primaryId":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"ID du diagnostic soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"treatment_type","description":"Type de traitement reçu par le participant","valueType":"string","restrictions":{"required":true,"codeList":["Ablation","Bone marrow transplant","Chemotherapy","Endoscopic therapy","Hormonal therapy","Immunotherapy","Other targeting molecular therapy","Other pharmacotherapy","Other cell-based therapy","Photodynamic therapy","Radiation therapy","Stem cell transplant","Surgery","Other"]},"meta":{"validationDependency":true,"core":true,"displayName":"Type de traitement"}},{"name":"treatment_is_primary","description":"Indiquer si ce traitement est le traitement de première intention reçu par le participant après son diagnostic","valueType":"string","restrictions":{"codeList":["Yes","No","Unknown"]},"meta":{"displayName":"Traitement de première intention"}},{"name":"treatment_intent","description":"Indiquer l'intention du traitement","valueType":"string","restrictions":{"codeList":["Adjuvant","Concurrent","Curative","Life extending","Neoadjuvant","Not applicable","Palliative","Preventative","Symptoms management","Unknown"]},"meta":{"displayName":"Intention du traitement"}},{"name":"treatment_response","description":"Indiquer la réponse du participant à ce traitement","valueType":"string","restrictions":{"codeList":["Clinical remission","Disease Progression","Partial Response","Stable Disease","Treatment cessation due to toxicity","Improvement of symptoms","Not applicable","No sign of disease","Worsening of symptoms","No improvement of symptoms"]},"meta":{"displayName":"Réponse au traitement"}},{"name":"medication_name","valueType":"string","description":"Nom du médicament (dénomination commune)","meta":{"core":true,"dependsOn":"treatment.treatment_type","displayName":"Nom du médicament"},"restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return {valid: false, message: `Column ${$name} is missing.`};\n        }\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const treatmentType = $row.treatment_type || '';\n        const treatmentTypes = [\n            'chemotherapy',\n            'hormonal therapy',\n            'immunotherapy',\n            'other targeting molecular therapy',\n            'other pharmacotherapy',\n        ];\n\n        if (!currField && treatmentType && treatmentTypes.includes(treatmentType.trim().toLowerCase())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the treatment_type is one of the following: ${treatmentTypes.join(\n                    ', ',\n                )}`,\n            };\n        }\n        return result;\n    })"]}},{"name":"medication_code","valueType":"string","description":"Numéro d'identification du médicament (code DIN)","meta":{"notes":"Au Canada - Le DIN identifie de manière unique le fabricant, le nom du produit, les ingrédients actifs), la teneur du ou des ingrédients actifs, la forme pharmaceutique et la voie d'administration.","dependsOn":"treatment.treatment_type","displayName":"Numéro d'identification du médicament "},"restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return {valid: false, message: `Column ${$name} is missing.`};\n        }\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const treatmentType = $row.treatment_type || '';\n        const treatmentTypes = [\n            'chemotherapy',\n            'hormonal therapy',\n            'immunotherapy',\n            'other targeting molecular therapy',\n            'other pharmacotherapy',\n        ];\n\n        if (!currField && treatmentType && treatmentTypes.includes(treatmentType.trim().toLowerCase())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the treatment_type is one of the following: ${treatmentTypes.join(\n                    ', ',\n                )}`,\n            };\n        }\n        return result;\n    })"]}},{"name":"medication_class","valueType":"string","description":"Classe de médicaments basée sur l'ATC (Classe Thérapeutique Anatomique)","meta":{"core":true,"notes":"Référez-vous à https://www.whocc.no/atc_ddd_index/ pour classer les principes actifs du médicament selon l'organe ou le système sur lequel il agit et ses propriétés thérapeutiques, pharmacologiques et chimiques. Les médicaments doivent être codés au 5e niveau de l'ATC.","dependsOn":"treatment.treatment_type","displayName":"Classe de médicament"},"restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return {valid: false, message: `Column ${$name} is missing.`};\n        }\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const treatmentType = $row.treatment_type || '';\n        const treatmentTypes = [\n            'chemotherapy',\n            'hormonal therapy',\n            'immunotherapy',\n            'other targeting molecular therapy',\n            'other pharmacotherapy',\n        ];\n\n        if (!currField && treatmentType && treatmentTypes.includes(treatmentType.trim().toLowerCase())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the treatment_type is one of the following: ${treatmentTypes.join(\n                    ', ',\n                )}`,\n            };\n        }\n        return result;\n    })"],"regex":"^[ABCDGHJLMNPRSV][0-9]{2}[A-Z]{2}[0-9]{2}$"}},{"description":"Date de début du traitement","name":"treatment_start_date","valueType":"string","meta":{"notes":"Pour les médicaments, veuillez fournir la date du début de l'ordonnance (DD-MM-YYY). Pour les traitements uniques, comme les chirurgies, veuillez fournir la date de l'intervention.","displayName":"Date du début du traitement"},"restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return {valid: false, message: `Column ${$name} is missing.`};\n        }\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const treatmentType = $row.treatment_type || '';\n        const treatmentTypes = [\n            'chemotherapy',\n            'hormonal therapy',\n            'immunotherapy',\n            'other targeting molecular therapy',\n            'other pharmacotherapy',\n        ];\n\n        if (!currField && treatmentType && treatmentTypes.includes(treatmentType.trim().toLowerCase())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the treatment_type is one of the following: ${treatmentTypes.join(\n                    ', ',\n                )}`,\n            };\n        }\n        return result;\n    })"]}},{"description":"Date de fin du traitement","name":"treatment_end_date","valueType":"string","meta":{"notes":"Pour les médicaments, veuillez fournir la date de fin de l'ordonnance (DD-MM-YYYY). Pour les traitement uniques, comme les chirurgies, veuillez laisser vide","displayName":"Date de fin de l'ordonnance"},"restrictions":{"script":["(function validate(inputs) {\n        const {$row, $name} = inputs;\n        const $field = $row[$name];\n\n        if(!$field){\n            return {valid: false, message: `Column ${$name} is missing.`};\n        }\n\n        let result = {valid: true, message: 'Ok'};\n        const currField = typeof $field === 'string' ? $field.trim().toLowerCase() : $field;\n        const treatmentType = $row.treatment_type || '';\n        const treatmentTypes = [\n            'chemotherapy',\n            'hormonal therapy',\n            'immunotherapy',\n            'other targeting molecular therapy',\n            'other pharmacotherapy',\n        ];\n\n        if (!currField && treatmentType && treatmentTypes.includes(treatmentType.trim().toLowerCase())) {\n            result = {\n                valid: false,\n                message: `${$name} must be provided when the treatment_type is one of the following: ${treatmentTypes.join(\n                    ', ',\n                )}`,\n            };\n        }\n        return result;\n    })"]}}]},{"name":"follow_up","description":"L'ensemble de champs reliés à une visite de suivi du participant ayant un diagnostic de cancer. Un suivi est défini comme tout épisode suivant le diagnostic de cancer. Pour soumettre plus d'un suivi pour un participant, ajouter des lignes à la table  suivi de ce participant.","meta":{"parent":"participant"},"fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"description":"Identifiant pour le participant soumis par l'étude","name":"submitter_participant_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_diagnosis_id","valueType":"string","description":"Identifiant pour le diagnostic du participant soumis par l'étude","meta":{"primaryId":true,"validationDependency":true,"foreignKey":"diagnosis.submitter_diagnosis_id","displayName":"ID du diagnostic soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"description":"Nombre de jours entre le diagnostic et la visite de suivi","name":"days_to_follow_up","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"units":"days","displayName":"Jours de suivi"}},{"description":"État de la maladie au moment du suivi","name":"disease_status_at_followup","valueType":"string","restrictions":{"required":true,"codeList":["Clinical remission","Distant progression","Loco-regional progression","No evidence of disease","Partial remission","Relapse or recurrence","Stable"]},"meta":{"core":true,"displayName":"État de la maladie au suivi"}},{"name":"relapse_interval","description":"Intervalle entre la fin du traitement de première intention et la progression de la maladie (en jours)","valueType":"integer","meta":{"units":"days","dependsOn":"follow_up.disease_status_at_followup","notes":"Ce champ indique la durée de l'intervalle sans maladie en jours dans le cas où la maladie était non-détectée suite au traitement primaire, puis une rechute, une récidive ou une progression (pour les tumeurs liquides) s'est produite par la suite","displayName":"Intervalle de recidive"}}]},{"name":"exposure","description":"L'ensemble de champs reliés à l'exposition à des facteurs de risque pour la santé pour le participant.","fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_participant_id","valueType":"string","description":"Identifiant unique pour le participant soumis par l'étude","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"smoking_status","description":"Statut tabagique du participant au moment de la collecte de données","valueType":"string","restrictions":{"codeList":["Current every day smoker","Current some day smoker","Former smoker","Never smoker","Smoker, current status unknown","Unknown if ever smoked","Current heavy tobacco smoker (more than 20)","Current light tobacco smoker"]},"meta":{"displayName":"Statut tabagique"}},{"name":"alcohol_status","description":"Consommation d'alcool actuelle basée sur la limite quotidienne recommandée","valueType":"string","restrictions":{"codeList":["No alcohol consumption","Alcohol intake within recommended daily limit","Alcohol intake exceeds recommended daily limit","Alcohol consumption unknown"]},"meta":{"notes":"Référez-vous au Centre canadien sur les dépendances et l'usage de substances. Pour les hommes, pas plus de 15 verres par semaine, avec pas plus de 3 verres par jour la plupart des jours. Pas plus de 4 verres en une seule occasion. Pour les femmes, pas plus de 10 verres par semaine, avec pas plus de 2 verres par jour la plupart des jours. Pas plus de 3 verres par occasion.","displayName":"Consommation d'alcool"}},{"name":"FSA","description":"Région de tri d'acheminement (3 premiers caractères du code postal)","valueType":"string","meta":{"notes":"Région de tri d'acheminement est représenté par les 3 premiers caractères du code postal","displayName":"Région de tri d'acheminement","examples":"H3W"},"restrictions":{"regex":"^[A-Za-z][0-9][A-Za-z]$"}}]},{"name":"phenotype","description":"L'ensemble de champes reliés aux phénotypes du participant. Pour soumettre plus d'un phénotype, veuillez ajouter des lignes à la table phénotype pour ce participant.","meta":{"parent":"participant"},"fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_participant_id","description":"Identifiant pour le participant soumis par l'étude","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"phenotype_source_text","valueType":"string","description":"Le phenotype (ou anomalie) du participant tel que rapporté par l'étude","restrictions":{"required":true},"meta":{"core":true,"examples":"trigonocéphalie, angiome","notes":"Veuillez fournir l'information telle qu'elle est rapportée dans l'étude","displayName":"Phénotype rapporté dans l'étude"}},{"name":"phenotype_HPO_code","valueType":"string","description":"Code du phénoype du participant selon le système de classification Human Phenoytpe Ontology (HPO)","restrictions":{"required":true,"regex":"^(HP:)[0-9]{7}$"},"meta":{"core":true,"notes":"Fournissez le code exact tel qu'il apparait dans HPO (par example: HP:0001161. Veuillez-vous référer à https://hpo.jax.org/app/.","displayName":"Code HPO"}},{"name":"age_at_phenotype","valueType":"number","description":"Âge du participant (en jours) où le phénotype a été observé chez ce participant","restrictions":{"range":{"min":0,"max":40000}},"meta":{"units":"days","displayName":"Âge (en jours) où le phénotype a été observé"}},{"name":"phenotype_observed","description":"Indiquer si le phénotype est observé","valueType":"boolean","restrictions":{"required":true},"meta":{"core":true,"displayName":"Phénotype est observé"}}]},{"name":"family","description":"L'ensemble de champs reliés aux relation entre les participants d'un même groupe familial. Cette table de données doit être soumise uniquemement si l'étude détient des données sur des groupes de participants qui partagent des liens de parenté (ex: jumeaux, trios).","fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"submitter_family","valueType":"string","description":"Identifant pour la famille du participant soumis par l'étude","restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"},"meta":{"displayName":"ID de la famille soumis par l'étude","foreignKey":"family.submitter_family_id","validationDependency":true,"primaryId":true,"notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."}},{"description":"Identifiant unique du participant soumis par l'étude","name":"submitter_participant_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"family_type","description":"Type de groupe familial auquel fait partie le participant","valueType":"string","restrictions":{"required":true,"codeList":["Case-parent trio","Case-sibling","Twins","Case - affected relative","Other"]},"meta":{"core":true,"displayName":"Type de groupe familial"}},{"name":"relationship_to_proband","description":"Relation du participant envers le sujet proposant","valueType":"string","restrictions":{"required":true,"codeList":["Is the proband","Mother","Father","Brother","Sister","Half-brother","Half-sister","Identical twin","Fraternal twin brother","Fraternal twin sister","Son","Daughter"]},"meta":{"core":true,"displayName":"Relation du participant envers le sujet proposant"}},{"name":"is_affected","description":"Est affecté par la condition","valueType":"string","restrictions":{"codeList":["Yes","No","Unknown"]},"meta":{"displayName":"Est affecté par la condition"}}]},{"name":"family_history","description":"L'ensemble de champs reliés à l'histoire de santé familiale.  Pour soumettre plusieurs conditions de santé pour la famille d'un participant, veuillez ajouter des lignes dans la table histoire familiale.","fields":[{"name":"study_id","valueType":"string","description":"Identifant pour l'étude","meta":{"validationDependency":true,"primaryId":true,"displayName":"ID étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"description":"Identifiant pour le participant soumis par l'étude","name":"submitter_participant_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"participant.submitter_participant_id","displayName":"ID du participant soumis par l'étude","notes":"Les caractères alphanumériques ainsi que les points, tirets et barres de soulignement sont supportés.  Maximum de 250 caractères."},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,250}$"}},{"name":"family_condition_name","description":"Nom de la condition médicale observée dans la famille du participant","valueType":"string","restrictions":{"required":true},"meta":{"core":true,"displayName":"Nom de la condition médicale d'un membre de la famille"}},{"name":"family_condition_relationship","description":"Quelle est la relation de ce membre de la famille envers le participant.","restrictions":{"codeList":["Mother","Father","Brother","Sister","Half-brother","Half-sister","Identical twin","Fraternal twin brother","Fraternal twin sister","Son","Daughter","Maternal grand-mother","Maternal grand-father","Paternal grand-mother","Paternal grand-father","Maternal aunt","Maternal uncle","Paternal aunt","Paternal uncle","Maternal cousin","Paternal cousin","Granddaughter","Grandson","Nephew","Niece","Spouse","Former spouse","Husband","Wife"]},"valueType":"string","meta":{"displayName":"Relation avec le membre de la famille affecté","notes":"Référez-vous au système de code HL7 pour identifier un type de relation entre le participant et le membre affecté de sa famille http://terminology.hl7.org/CodeSystem/v3-RoleCode"}}]}],"_id":"6422181a566edc001f147c8a","name":"CQDG Data Dictionary FR","version":"5.77","createdAt":"2023-03-27T22:26:34.839Z","updatedAt":"2023-03-27T22:26:34.839Z","__v":0},"versions":["5.77","5.75","5.74","5.73","5.72","5.71","5.70","5.69","5.68","5.66","5.64","5.63","5.60","5.59","5.58","5.57","5.56","5.55","5.54","5.53","5.52","5.51","5.50","5.48","5.47","5.46","5.45","5.44","5.43","5.42","5.41","5.40","5.39","5.38","5.37","5.36","5.35","5.34","5.33","5.31","5.30","5.29","5.28","5.27","5.26","5.25","5.24","5.23","5.22","5.21","5.20","5.19","5.18","5.17","5.16","5.15","5.13","5.12","5.11","5.1","4.8","4.6","4.5","4.4","4.2","4.1","4.0"],"currentVersion":"5.77"}